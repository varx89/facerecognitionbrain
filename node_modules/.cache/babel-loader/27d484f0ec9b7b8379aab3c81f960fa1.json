{"ast":null,"code":"import _regeneratorRuntime from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createForOfIteratorHelper from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Circle, ExternalInteractorBase, Vector, calcEasing, clamp, getDistances, isInArray, mouseMoveEvent } from \"tsparticles-engine\";\nimport { Attract } from \"./Options/Classes/Attract\";\nexport var Attractor = /*#__PURE__*/function (_ExternalInteractorBa) {\n  _inherits(Attractor, _ExternalInteractorBa);\n\n  var _super = _createSuper(Attractor);\n\n  function Attractor(container) {\n    var _this;\n\n    _classCallCheck(this, Attractor);\n\n    _this = _super.call(this, container);\n\n    if (!container.attract) {\n      container.attract = {\n        particles: []\n      };\n    }\n\n    _this.handleClickMode = function (mode) {\n      var options = _this.container.actualOptions,\n          attract = options.interactivity.modes.attract;\n\n      if (!attract || mode !== \"attract\") {\n        return;\n      }\n\n      if (!container.attract) {\n        container.attract = {\n          particles: []\n        };\n      }\n\n      container.attract.clicking = true;\n      container.attract.count = 0;\n\n      var _iterator = _createForOfIteratorHelper(container.attract.particles),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var particle = _step.value;\n\n          if (!_this.isEnabled(particle)) {\n            continue;\n          }\n\n          particle.velocity.setTo(particle.initialVelocity);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      container.attract.particles = [];\n      container.attract.finish = false;\n      setTimeout(function () {\n        if (!container.destroyed) {\n          if (!container.attract) {\n            container.attract = {\n              particles: []\n            };\n          }\n\n          container.attract.clicking = false;\n        }\n      }, attract.duration * 1000);\n    };\n\n    return _this;\n  }\n\n  _createClass(Attractor, [{\n    key: \"clear\",\n    value: function clear() {}\n  }, {\n    key: \"init\",\n    value: function init() {\n      var container = this.container,\n          attract = container.actualOptions.interactivity.modes.attract;\n\n      if (!attract) {\n        return;\n      }\n\n      container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n  }, {\n    key: \"interact\",\n    value: function () {\n      var _interact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var container, options, mouseMoveStatus, events, hoverEnabled, hoverMode, clickEnabled, clickMode;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n\n                if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n                  this.hoverAttract();\n                } else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n                  this.clickAttract();\n                }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function interact() {\n        return _interact.apply(this, arguments);\n      }\n\n      return interact;\n    }()\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      var _a;\n\n      var container = this.container,\n          options = container.actualOptions,\n          mouse = container.interactivity.mouse,\n          events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events;\n\n      if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n        return false;\n      }\n\n      var hoverMode = events.onHover.mode,\n          clickMode = events.onClick.mode;\n      return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n  }, {\n    key: \"loadModeOptions\",\n    value: function loadModeOptions(options) {\n      if (!options.attract) {\n        options.attract = new Attract();\n      }\n\n      for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        sources[_key - 1] = arguments[_key];\n      }\n\n      for (var _i = 0, _sources = sources; _i < _sources.length; _i++) {\n        var source = _sources[_i];\n        options.attract.load(source === null || source === void 0 ? void 0 : source.attract);\n      }\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }, {\n    key: \"clickAttract\",\n    value: function clickAttract() {\n      var container = this.container;\n\n      if (!container.attract) {\n        container.attract = {\n          particles: []\n        };\n      }\n\n      if (!container.attract.finish) {\n        if (!container.attract.count) {\n          container.attract.count = 0;\n        }\n\n        container.attract.count++;\n\n        if (container.attract.count === container.particles.count) {\n          container.attract.finish = true;\n        }\n      }\n\n      if (container.attract.clicking) {\n        var mousePos = container.interactivity.mouse.clickPosition,\n            attractRadius = container.retina.attractModeDistance;\n\n        if (!attractRadius || attractRadius < 0 || !mousePos) {\n          return;\n        }\n\n        this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n      } else if (container.attract.clicking === false) {\n        container.attract.particles = [];\n      }\n\n      return;\n    }\n  }, {\n    key: \"hoverAttract\",\n    value: function hoverAttract() {\n      var container = this.container,\n          mousePos = container.interactivity.mouse.position,\n          attractRadius = container.retina.attractModeDistance;\n\n      if (!attractRadius || attractRadius < 0 || !mousePos) {\n        return;\n      }\n\n      this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n  }, {\n    key: \"processAttract\",\n    value: function processAttract(position, attractRadius, area) {\n      var _this2 = this;\n\n      var container = this.container,\n          attractOptions = container.actualOptions.interactivity.modes.attract;\n\n      if (!attractOptions) {\n        return;\n      }\n\n      var query = container.particles.quadTree.query(area, function (p) {\n        return _this2.isEnabled(p);\n      });\n\n      var _iterator2 = _createForOfIteratorHelper(query),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var particle = _step2.value;\n\n          var _getDistances = getDistances(particle.position, position),\n              dx = _getDistances.dx,\n              dy = _getDistances.dy,\n              distance = _getDistances.distance;\n\n          var velocity = attractOptions.speed * attractOptions.factor;\n          var attractFactor = clamp(calcEasing(1 - distance / attractRadius, attractOptions.easing) * velocity, 0, attractOptions.maxSpeed);\n          var normVec = Vector.create(distance === 0 ? velocity : dx / distance * attractFactor, distance === 0 ? velocity : dy / distance * attractFactor);\n          particle.position.subFrom(normVec);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }]);\n\n  return Attractor;\n}(ExternalInteractorBase);","map":{"version":3,"names":["Circle","ExternalInteractorBase","Vector","calcEasing","clamp","getDistances","isInArray","mouseMoveEvent","Attract","Attractor","container","attract","particles","handleClickMode","mode","options","actualOptions","interactivity","modes","clicking","count","particle","isEnabled","velocity","setTo","initialVelocity","finish","setTimeout","destroyed","duration","retina","attractModeDistance","distance","pixelRatio","mouseMoveStatus","status","events","hoverEnabled","onHover","enable","hoverMode","clickEnabled","onClick","clickMode","hoverAttract","clickAttract","_a","mouse","position","clickPosition","sources","source","load","mousePos","attractRadius","processAttract","x","y","area","attractOptions","query","quadTree","p","dx","dy","speed","factor","attractFactor","easing","maxSpeed","normVec","create","subFrom"],"sources":["D:/Projects/facerecognitionbrain/node_modules/tsparticles-interaction-external-attract/esm/Attractor.js"],"sourcesContent":["import { Circle, ExternalInteractorBase, Vector, calcEasing, clamp, getDistances, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Attract } from \"./Options/Classes/Attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== \"attract\") {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (!container.destroyed) {\n                    if (!container.attract) {\n                        container.attract = { particles: [] };\n                    }\n                    container.attract.clicking = false;\n                }\n            }, attract.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this.hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this.clickAttract();\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source === null || source === void 0 ? void 0 : source.attract);\n        }\n    }\n    reset() {\n    }\n    clickAttract() {\n        const container = this.container;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        if (!container.attract.finish) {\n            if (!container.attract.count) {\n                container.attract.count = 0;\n            }\n            container.attract.count++;\n            if (container.attract.count === container.particles.count) {\n                container.attract.finish = true;\n            }\n        }\n        if (container.attract.clicking) {\n            const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n            if (!attractRadius || attractRadius < 0 || !mousePos) {\n                return;\n            }\n            this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        }\n        else if (container.attract.clicking === false) {\n            container.attract.particles = [];\n        }\n        return;\n    }\n    hoverAttract() {\n        const container = this.container, mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n        if (!attractRadius || attractRadius < 0 || !mousePos) {\n            return;\n        }\n        this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n    processAttract(position, attractRadius, area) {\n        const container = this.container, attractOptions = container.actualOptions.interactivity.modes.attract;\n        if (!attractOptions) {\n            return;\n        }\n        const query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const { dx, dy, distance } = getDistances(particle.position, position);\n            const velocity = attractOptions.speed * attractOptions.factor;\n            const attractFactor = clamp(calcEasing(1 - distance / attractRadius, attractOptions.easing) * velocity, 0, attractOptions.maxSpeed);\n            const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n            particle.position.subFrom(normVec);\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}