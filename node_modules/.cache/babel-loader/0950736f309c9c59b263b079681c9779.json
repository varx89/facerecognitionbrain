{"ast":null,"code":"import _regeneratorRuntime from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { ExternalInteractorBase } from \"tsparticles-engine\";\nimport { Remove } from \"./Options/Classes/Remove\";\nexport var Remover = /*#__PURE__*/function (_ExternalInteractorBa) {\n  _inherits(Remover, _ExternalInteractorBa);\n\n  var _super = _createSuper(Remover);\n\n  function Remover(container) {\n    var _this;\n\n    _classCallCheck(this, Remover);\n\n    _this = _super.call(this, container);\n\n    _this.handleClickMode = function (mode) {\n      var container = _this.container,\n          options = container.actualOptions;\n\n      if (!options.interactivity.modes.remove || mode !== \"remove\") {\n        return;\n      }\n\n      var removeNb = options.interactivity.modes.remove.quantity;\n      container.particles.removeQuantity(removeNb);\n    };\n\n    return _this;\n  }\n\n  _createClass(Remover, [{\n    key: \"clear\",\n    value: function clear() {}\n  }, {\n    key: \"init\",\n    value: function init() {}\n  }, {\n    key: \"interact\",\n    value: function () {\n      var _interact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function interact() {\n        return _interact.apply(this, arguments);\n      }\n\n      return interact;\n    }()\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return true;\n    }\n  }, {\n    key: \"loadModeOptions\",\n    value: function loadModeOptions(options) {\n      if (!options.remove) {\n        options.remove = new Remove();\n      }\n\n      for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        sources[_key - 1] = arguments[_key];\n      }\n\n      for (var _i = 0, _sources = sources; _i < _sources.length; _i++) {\n        var source = _sources[_i];\n        options.remove.load(source === null || source === void 0 ? void 0 : source.remove);\n      }\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }]);\n\n  return Remover;\n}(ExternalInteractorBase);","map":{"version":3,"names":["ExternalInteractorBase","Remove","Remover","container","handleClickMode","mode","options","actualOptions","interactivity","modes","remove","removeNb","quantity","particles","removeQuantity","sources","source","load"],"sources":["D:/Projects/facerecognitionbrain/node_modules/tsparticles-interaction-external-remove/esm/Remover.js"],"sourcesContent":["import { ExternalInteractorBase } from \"tsparticles-engine\";\nimport { Remove } from \"./Options/Classes/Remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== \"remove\") {\n                return;\n            }\n            const removeNb = options.interactivity.modes.remove.quantity;\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source === null || source === void 0 ? void 0 : source.remove);\n        }\n    }\n    reset() {\n    }\n}\n"],"mappings":";;;;;;AAAA,SAASA,sBAAT,QAAuC,oBAAvC;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,WAAaC,OAAb;EAAA;;EAAA;;EACI,iBAAYC,SAAZ,EAAuB;IAAA;;IAAA;;IACnB,0BAAMA,SAAN;;IACA,MAAKC,eAAL,GAAuB,UAACC,IAAD,EAAU;MAC7B,IAAMF,SAAS,GAAG,MAAKA,SAAvB;MAAA,IAAkCG,OAAO,GAAGH,SAAS,CAACI,aAAtD;;MACA,IAAI,CAACD,OAAO,CAACE,aAAR,CAAsBC,KAAtB,CAA4BC,MAA7B,IAAuCL,IAAI,KAAK,QAApD,EAA8D;QAC1D;MACH;;MACD,IAAMM,QAAQ,GAAGL,OAAO,CAACE,aAAR,CAAsBC,KAAtB,CAA4BC,MAA5B,CAAmCE,QAApD;MACAT,SAAS,CAACU,SAAV,CAAoBC,cAApB,CAAmCH,QAAnC;IACH,CAPD;;IAFmB;EAUtB;;EAXL;IAAA;IAAA,OAYI,iBAAQ,CACP;EAbL;IAAA;IAAA,OAcI,gBAAO,CACN;EAfL;IAAA;IAAA;MAAA,2EAgBI;QAAA;UAAA;YAAA;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAhBJ;;MAAA;QAAA;MAAA;;MAAA;IAAA;EAAA;IAAA;IAAA,OAkBI,qBAAY;MACR,OAAO,IAAP;IACH;EApBL;IAAA;IAAA,OAqBI,yBAAgBL,OAAhB,EAAqC;MACjC,IAAI,CAACA,OAAO,CAACI,MAAb,EAAqB;QACjBJ,OAAO,CAACI,MAAR,GAAiB,IAAIT,MAAJ,EAAjB;MACH;;MAHgC,kCAATc,OAAS;QAATA,OAAS;MAAA;;MAIjC,4BAAqBA,OAArB,8BAA8B;QAAzB,IAAMC,MAAM,eAAZ;QACDV,OAAO,CAACI,MAAR,CAAeO,IAAf,CAAoBD,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,KAAK,CAAnC,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACN,MAA3E;MACH;IACJ;EA5BL;IAAA;IAAA,OA6BI,iBAAQ,CACP;EA9BL;;EAAA;AAAA,EAA6BV,sBAA7B"},"metadata":{},"sourceType":"module"}