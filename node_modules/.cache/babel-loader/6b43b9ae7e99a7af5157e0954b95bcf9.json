{"ast":null,"code":"import _classCallCheck from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { getRangeValue, getValue, itemFromSingleOrMultiple, loadParticlesOptions, randomInRange, setRangeValue } from \"tsparticles-engine\";\nimport { Destroy } from \"./Options/Classes/Destroy\";\nexport var DestroyUpdater = /*#__PURE__*/function () {\n  function DestroyUpdater(engine, container) {\n    _classCallCheck(this, DestroyUpdater);\n\n    this.engine = engine;\n    this.container = container;\n  }\n\n  _createClass(DestroyUpdater, [{\n    key: \"init\",\n    value: function init(particle) {\n      var container = this.container,\n          particlesOptions = particle.options,\n          destroyOptions = particlesOptions.destroy;\n\n      if (!destroyOptions) {\n        return;\n      }\n\n      particle.splitCount = 0;\n      var destroyBounds = destroyOptions.bounds;\n\n      if (!particle.destroyBounds) {\n        particle.destroyBounds = {};\n      }\n\n      if (destroyBounds.bottom) {\n        particle.destroyBounds.bottom = getRangeValue(destroyBounds.bottom) * container.canvas.size.height / 100;\n      }\n\n      if (destroyBounds.left) {\n        particle.destroyBounds.left = getRangeValue(destroyBounds.left) * container.canvas.size.width / 100;\n      }\n\n      if (destroyBounds.right) {\n        particle.destroyBounds.right = getRangeValue(destroyBounds.right) * container.canvas.size.width / 100;\n      }\n\n      if (destroyBounds.top) {\n        particle.destroyBounds.top = getRangeValue(destroyBounds.top) * container.canvas.size.height / 100;\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      return !particle.destroyed;\n    }\n  }, {\n    key: \"loadOptions\",\n    value: function loadOptions(options) {\n      if (!options.destroy) {\n        options.destroy = new Destroy();\n      }\n\n      for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        sources[_key - 1] = arguments[_key];\n      }\n\n      for (var _i = 0, _sources = sources; _i < _sources.length; _i++) {\n        var source = _sources[_i];\n        options.destroy.load(source === null || source === void 0 ? void 0 : source.destroy);\n      }\n    }\n  }, {\n    key: \"particleDestroyed\",\n    value: function particleDestroyed(particle, override) {\n      if (override) {\n        return;\n      }\n\n      var destroyOptions = particle.options.destroy;\n\n      if (destroyOptions && destroyOptions.mode === \"split\") {\n        this.split(particle);\n      }\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle) {\n      if (!this.isEnabled(particle)) {\n        return;\n      }\n\n      var position = particle.getPosition(),\n          bounds = particle.destroyBounds;\n\n      if (!bounds) {\n        return;\n      }\n\n      if (bounds.bottom !== undefined && position.y >= bounds.bottom || bounds.left !== undefined && position.x <= bounds.left || bounds.right !== undefined && position.x >= bounds.right || bounds.top !== undefined && position.y <= bounds.top) {\n        particle.destroy();\n      }\n    }\n  }, {\n    key: \"addSplitParticle\",\n    value: function addSplitParticle(parent, splitParticlesOptions) {\n      var destroyOptions = parent.options.destroy;\n\n      if (!destroyOptions) {\n        return;\n      }\n\n      var splitOptions = destroyOptions.split,\n          options = loadParticlesOptions(this.engine, this.container, parent.options),\n          factor = getValue(splitOptions.factor);\n      options.color.load({\n        value: {\n          hsl: parent.getFillColor()\n        }\n      });\n      options.move.load({\n        center: {\n          x: parent.position.x,\n          y: parent.position.y,\n          mode: \"precise\"\n        }\n      });\n\n      if (typeof options.size.value === \"number\") {\n        options.size.value /= factor;\n      } else {\n        options.size.value.min /= factor;\n        options.size.value.max /= factor;\n      }\n\n      options.load(splitParticlesOptions);\n      var offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : 0,\n          position = {\n        x: parent.position.x + randomInRange(offset),\n        y: parent.position.y + randomInRange(offset)\n      };\n      return this.container.particles.addParticle(position, options, parent.group, function (particle) {\n        var _a;\n\n        if (particle.size.value < 0.5) {\n          return false;\n        }\n\n        particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n        particle.splitCount = ((_a = parent.splitCount) !== null && _a !== void 0 ? _a : 0) + 1;\n        particle.unbreakable = true;\n        setTimeout(function () {\n          particle.unbreakable = false;\n        }, 500);\n        return true;\n      });\n    }\n  }, {\n    key: \"split\",\n    value: function split(particle) {\n      var destroyOptions = particle.options.destroy;\n\n      if (!destroyOptions) {\n        return;\n      }\n\n      var splitOptions = destroyOptions.split;\n\n      if (splitOptions.count >= 0 && (particle.splitCount === undefined || particle.splitCount++ > splitOptions.count)) {\n        return;\n      }\n\n      var rate = getValue(splitOptions.rate),\n          particlesSplitOptions = itemFromSingleOrMultiple(splitOptions.particles);\n\n      for (var i = 0; i < rate; i++) {\n        this.addSplitParticle(particle, particlesSplitOptions);\n      }\n    }\n  }]);\n\n  return DestroyUpdater;\n}();","map":{"version":3,"names":["getRangeValue","getValue","itemFromSingleOrMultiple","loadParticlesOptions","randomInRange","setRangeValue","Destroy","DestroyUpdater","engine","container","particle","particlesOptions","options","destroyOptions","destroy","splitCount","destroyBounds","bounds","bottom","canvas","size","height","left","width","right","top","destroyed","sources","source","load","override","mode","split","isEnabled","position","getPosition","undefined","y","x","parent","splitParticlesOptions","splitOptions","factor","color","value","hsl","getFillColor","move","center","min","max","offset","sizeOffset","particles","addParticle","group","_a","velocity","length","unbreakable","setTimeout","count","rate","particlesSplitOptions","i","addSplitParticle"],"sources":["D:/Projects/facerecognitionbrain/node_modules/tsparticles-updater-destroy/esm/DestroyUpdater.js"],"sourcesContent":["import { getRangeValue, getValue, itemFromSingleOrMultiple, loadParticlesOptions, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nimport { Destroy } from \"./Options/Classes/Destroy\";\nexport class DestroyUpdater {\n    constructor(engine, container) {\n        this.engine = engine;\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, destroyOptions = particlesOptions.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        particle.splitCount = 0;\n        const destroyBounds = destroyOptions.bounds;\n        if (!particle.destroyBounds) {\n            particle.destroyBounds = {};\n        }\n        if (destroyBounds.bottom) {\n            particle.destroyBounds.bottom = (getRangeValue(destroyBounds.bottom) * container.canvas.size.height) / 100;\n        }\n        if (destroyBounds.left) {\n            particle.destroyBounds.left = (getRangeValue(destroyBounds.left) * container.canvas.size.width) / 100;\n        }\n        if (destroyBounds.right) {\n            particle.destroyBounds.right = (getRangeValue(destroyBounds.right) * container.canvas.size.width) / 100;\n        }\n        if (destroyBounds.top) {\n            particle.destroyBounds.top = (getRangeValue(destroyBounds.top) * container.canvas.size.height) / 100;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.destroy) {\n            options.destroy = new Destroy();\n        }\n        for (const source of sources) {\n            options.destroy.load(source === null || source === void 0 ? void 0 : source.destroy);\n        }\n    }\n    particleDestroyed(particle, override) {\n        if (override) {\n            return;\n        }\n        const destroyOptions = particle.options.destroy;\n        if (destroyOptions && destroyOptions.mode === \"split\") {\n            this.split(particle);\n        }\n    }\n    update(particle) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        const position = particle.getPosition(), bounds = particle.destroyBounds;\n        if (!bounds) {\n            return;\n        }\n        if ((bounds.bottom !== undefined && position.y >= bounds.bottom) ||\n            (bounds.left !== undefined && position.x <= bounds.left) ||\n            (bounds.right !== undefined && position.x >= bounds.right) ||\n            (bounds.top !== undefined && position.y <= bounds.top)) {\n            particle.destroy();\n        }\n    }\n    addSplitParticle(parent, splitParticlesOptions) {\n        const destroyOptions = parent.options.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        const splitOptions = destroyOptions.split, options = loadParticlesOptions(this.engine, this.container, parent.options), factor = getValue(splitOptions.factor);\n        options.color.load({\n            value: {\n                hsl: parent.getFillColor(),\n            },\n        });\n        options.move.load({\n            center: {\n                x: parent.position.x,\n                y: parent.position.y,\n                mode: \"precise\",\n            },\n        });\n        if (typeof options.size.value === \"number\") {\n            options.size.value /= factor;\n        }\n        else {\n            options.size.value.min /= factor;\n            options.size.value.max /= factor;\n        }\n        options.load(splitParticlesOptions);\n        const offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : 0, position = {\n            x: parent.position.x + randomInRange(offset),\n            y: parent.position.y + randomInRange(offset),\n        };\n        return this.container.particles.addParticle(position, options, parent.group, (particle) => {\n            var _a;\n            if (particle.size.value < 0.5) {\n                return false;\n            }\n            particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n            particle.splitCount = ((_a = parent.splitCount) !== null && _a !== void 0 ? _a : 0) + 1;\n            particle.unbreakable = true;\n            setTimeout(() => {\n                particle.unbreakable = false;\n            }, 500);\n            return true;\n        });\n    }\n    split(particle) {\n        const destroyOptions = particle.options.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        const splitOptions = destroyOptions.split;\n        if (splitOptions.count >= 0 &&\n            (particle.splitCount === undefined || particle.splitCount++ > splitOptions.count)) {\n            return;\n        }\n        const rate = getValue(splitOptions.rate), particlesSplitOptions = itemFromSingleOrMultiple(splitOptions.particles);\n        for (let i = 0; i < rate; i++) {\n            this.addSplitParticle(particle, particlesSplitOptions);\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}