{"ast":null,"code":"import _createForOfIteratorHelper from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { arrayRandomIndex, executeOnSingleOrMultiple, itemFromArray } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterInstance } from \"./EmitterInstance\";\nexport var Emitters = /*#__PURE__*/function () {\n  function Emitters(engine, container) {\n    var _this = this;\n\n    _classCallCheck(this, Emitters);\n\n    this.container = container;\n    this._engine = engine;\n    this.array = [];\n    this.emitters = [];\n    this.interactivityEmitters = {\n      random: {\n        count: 1,\n        enable: false\n      },\n      value: []\n    };\n\n    container.getEmitter = function (idxOrName) {\n      return idxOrName === undefined || typeof idxOrName === \"number\" ? _this.array[idxOrName || 0] : _this.array.find(function (t) {\n        return t.name === idxOrName;\n      });\n    };\n\n    container.addEmitter = function (options, position) {\n      return _this.addEmitter(options, position);\n    };\n\n    container.removeEmitter = function (idxOrName) {\n      var emitter = container.getEmitter(idxOrName);\n\n      if (emitter) {\n        _this.removeEmitter(emitter);\n      }\n    };\n\n    container.playEmitter = function (idxOrName) {\n      var emitter = container.getEmitter(idxOrName);\n\n      if (emitter) {\n        emitter.externalPlay();\n      }\n    };\n\n    container.pauseEmitter = function (idxOrName) {\n      var emitter = container.getEmitter(idxOrName);\n\n      if (emitter) {\n        emitter.externalPause();\n      }\n    };\n  }\n\n  _createClass(Emitters, [{\n    key: \"addEmitter\",\n    value: function addEmitter(options, position) {\n      var emitterOptions = new Emitter();\n      emitterOptions.load(options);\n      var emitter = new EmitterInstance(this._engine, this, this.container, emitterOptions, position);\n      this.array.push(emitter);\n      return emitter;\n    }\n  }, {\n    key: \"handleClickMode\",\n    value: function handleClickMode(mode) {\n      var _this2 = this;\n\n      var emitterOptions = this.emitters,\n          modeEmitters = this.interactivityEmitters;\n\n      if (mode === \"emitter\") {\n        var emittersModeOptions;\n\n        if (modeEmitters && modeEmitters.value instanceof Array) {\n          if (modeEmitters.value.length > 0 && modeEmitters.random.enable) {\n            emittersModeOptions = [];\n            var usedIndexes = [];\n\n            for (var i = 0; i < modeEmitters.random.count; i++) {\n              var idx = arrayRandomIndex(modeEmitters.value);\n\n              if (usedIndexes.includes(idx) && usedIndexes.length < modeEmitters.value.length) {\n                i--;\n                continue;\n              }\n\n              usedIndexes.push(idx);\n              emittersModeOptions.push(itemFromArray(modeEmitters.value, idx));\n            }\n          } else {\n            emittersModeOptions = modeEmitters.value;\n          }\n        } else {\n          emittersModeOptions = modeEmitters === null || modeEmitters === void 0 ? void 0 : modeEmitters.value;\n        }\n\n        var emittersOptions = emittersModeOptions !== null && emittersModeOptions !== void 0 ? emittersModeOptions : emitterOptions,\n            ePosition = this.container.interactivity.mouse.clickPosition;\n        executeOnSingleOrMultiple(emittersOptions, function (emitter) {\n          _this2.addEmitter(emitter, ePosition);\n        });\n      }\n    }\n  }, {\n    key: \"init\",\n    value: function init(options) {\n      var _a, _b, _c, _d, _e, _f, _g, _h;\n\n      if (!options) {\n        return;\n      }\n\n      this.emitters = executeOnSingleOrMultiple(options.emitters, function (emitter) {\n        var tmp = new Emitter();\n        tmp.load(emitter);\n        return tmp;\n      });\n      var interactivityEmitters = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n\n      if (interactivityEmitters) {\n        if (interactivityEmitters instanceof Array) {\n          this.interactivityEmitters = {\n            random: {\n              count: 1,\n              enable: true\n            },\n            value: interactivityEmitters.map(function (s) {\n              var tmp = new Emitter();\n              tmp.load(s);\n              return tmp;\n            })\n          };\n        } else {\n          var emitterMode = interactivityEmitters;\n\n          if (emitterMode.value !== undefined) {\n            if (emitterMode.value instanceof Array) {\n              this.interactivityEmitters = {\n                random: {\n                  count: (_c = this.interactivityEmitters.random.count) !== null && _c !== void 0 ? _c : 1,\n                  enable: (_d = this.interactivityEmitters.random.enable) !== null && _d !== void 0 ? _d : false\n                },\n                value: emitterMode.value.map(function (s) {\n                  var tmp = new Emitter();\n                  tmp.load(s);\n                  return tmp;\n                })\n              };\n            } else {\n              var tmp = new Emitter();\n              tmp.load(emitterMode.value);\n              this.interactivityEmitters = {\n                random: {\n                  count: (_e = this.interactivityEmitters.random.count) !== null && _e !== void 0 ? _e : 1,\n                  enable: (_f = this.interactivityEmitters.random.enable) !== null && _f !== void 0 ? _f : false\n                },\n                value: tmp\n              };\n            }\n          } else {\n            var _tmp = new Emitter();\n\n            _tmp.load(interactivityEmitters);\n\n            this.interactivityEmitters = {\n              random: {\n                count: (_g = this.interactivityEmitters.random.count) !== null && _g !== void 0 ? _g : 1,\n                enable: (_h = this.interactivityEmitters.random.enable) !== null && _h !== void 0 ? _h : false\n              },\n              value: _tmp\n            };\n          }\n        }\n      }\n\n      if (this.emitters instanceof Array) {\n        var _iterator = _createForOfIteratorHelper(this.emitters),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var emitterOptions = _step.value;\n            this.addEmitter(emitterOptions);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      } else {\n        this.addEmitter(this.emitters);\n      }\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      var _iterator2 = _createForOfIteratorHelper(this.array),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var emitter = _step2.value;\n          emitter.pause();\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"play\",\n    value: function play() {\n      var _iterator3 = _createForOfIteratorHelper(this.array),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var emitter = _step3.value;\n          emitter.play();\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"removeEmitter\",\n    value: function removeEmitter(emitter) {\n      var index = this.array.indexOf(emitter);\n\n      if (index >= 0) {\n        this.array.splice(index, 1);\n      }\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var _iterator4 = _createForOfIteratorHelper(this.array),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var emitter = _step4.value;\n          emitter.resize();\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.array = [];\n    }\n  }, {\n    key: \"update\",\n    value: function update(delta) {\n      var _iterator5 = _createForOfIteratorHelper(this.array),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var emitter = _step5.value;\n          emitter.update(delta);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n  }]);\n\n  return Emitters;\n}();","map":{"version":3,"names":["arrayRandomIndex","executeOnSingleOrMultiple","itemFromArray","Emitter","EmitterInstance","Emitters","engine","container","_engine","array","emitters","interactivityEmitters","random","count","enable","value","getEmitter","idxOrName","undefined","find","t","name","addEmitter","options","position","removeEmitter","emitter","playEmitter","externalPlay","pauseEmitter","externalPause","emitterOptions","load","push","mode","modeEmitters","emittersModeOptions","Array","length","usedIndexes","i","idx","includes","emittersOptions","ePosition","interactivity","mouse","clickPosition","_a","_b","_c","_d","_e","_f","_g","_h","tmp","modes","map","s","emitterMode","pause","play","index","indexOf","splice","resize","delta","update"],"sources":["D:/Projects/facerecognitionbrain/node_modules/tsparticles-plugin-emitters/esm/Emitters.js"],"sourcesContent":["import { arrayRandomIndex, executeOnSingleOrMultiple, itemFromArray } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterInstance } from \"./EmitterInstance\";\nexport class Emitters {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.array = [];\n        this.emitters = [];\n        this.interactivityEmitters = {\n            random: {\n                count: 1,\n                enable: false,\n            },\n            value: [],\n        };\n        container.getEmitter = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addEmitter = (options, position) => this.addEmitter(options, position);\n        container.removeEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                this.removeEmitter(emitter);\n            }\n        };\n        container.playEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPlay();\n            }\n        };\n        container.pauseEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPause();\n            }\n        };\n    }\n    addEmitter(options, position) {\n        const emitterOptions = new Emitter();\n        emitterOptions.load(options);\n        const emitter = new EmitterInstance(this._engine, this, this.container, emitterOptions, position);\n        this.array.push(emitter);\n        return emitter;\n    }\n    handleClickMode(mode) {\n        const emitterOptions = this.emitters, modeEmitters = this.interactivityEmitters;\n        if (mode === \"emitter\") {\n            let emittersModeOptions;\n            if (modeEmitters && modeEmitters.value instanceof Array) {\n                if (modeEmitters.value.length > 0 && modeEmitters.random.enable) {\n                    emittersModeOptions = [];\n                    const usedIndexes = [];\n                    for (let i = 0; i < modeEmitters.random.count; i++) {\n                        const idx = arrayRandomIndex(modeEmitters.value);\n                        if (usedIndexes.includes(idx) && usedIndexes.length < modeEmitters.value.length) {\n                            i--;\n                            continue;\n                        }\n                        usedIndexes.push(idx);\n                        emittersModeOptions.push(itemFromArray(modeEmitters.value, idx));\n                    }\n                }\n                else {\n                    emittersModeOptions = modeEmitters.value;\n                }\n            }\n            else {\n                emittersModeOptions = modeEmitters === null || modeEmitters === void 0 ? void 0 : modeEmitters.value;\n            }\n            const emittersOptions = emittersModeOptions !== null && emittersModeOptions !== void 0 ? emittersModeOptions : emitterOptions, ePosition = this.container.interactivity.mouse.clickPosition;\n            executeOnSingleOrMultiple(emittersOptions, (emitter) => {\n                this.addEmitter(emitter, ePosition);\n            });\n        }\n    }\n    init(options) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        if (!options) {\n            return;\n        }\n        this.emitters = executeOnSingleOrMultiple(options.emitters, (emitter) => {\n            const tmp = new Emitter();\n            tmp.load(emitter);\n            return tmp;\n        });\n        const interactivityEmitters = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n        if (interactivityEmitters) {\n            if (interactivityEmitters instanceof Array) {\n                this.interactivityEmitters = {\n                    random: {\n                        count: 1,\n                        enable: true,\n                    },\n                    value: interactivityEmitters.map((s) => {\n                        const tmp = new Emitter();\n                        tmp.load(s);\n                        return tmp;\n                    }),\n                };\n            }\n            else {\n                const emitterMode = interactivityEmitters;\n                if (emitterMode.value !== undefined) {\n                    if (emitterMode.value instanceof Array) {\n                        this.interactivityEmitters = {\n                            random: {\n                                count: (_c = this.interactivityEmitters.random.count) !== null && _c !== void 0 ? _c : 1,\n                                enable: (_d = this.interactivityEmitters.random.enable) !== null && _d !== void 0 ? _d : false,\n                            },\n                            value: emitterMode.value.map((s) => {\n                                const tmp = new Emitter();\n                                tmp.load(s);\n                                return tmp;\n                            }),\n                        };\n                    }\n                    else {\n                        const tmp = new Emitter();\n                        tmp.load(emitterMode.value);\n                        this.interactivityEmitters = {\n                            random: {\n                                count: (_e = this.interactivityEmitters.random.count) !== null && _e !== void 0 ? _e : 1,\n                                enable: (_f = this.interactivityEmitters.random.enable) !== null && _f !== void 0 ? _f : false,\n                            },\n                            value: tmp,\n                        };\n                    }\n                }\n                else {\n                    const tmp = new Emitter();\n                    tmp.load(interactivityEmitters);\n                    this.interactivityEmitters = {\n                        random: {\n                            count: (_g = this.interactivityEmitters.random.count) !== null && _g !== void 0 ? _g : 1,\n                            enable: (_h = this.interactivityEmitters.random.enable) !== null && _h !== void 0 ? _h : false,\n                        },\n                        value: tmp,\n                    };\n                }\n            }\n        }\n        if (this.emitters instanceof Array) {\n            for (const emitterOptions of this.emitters) {\n                this.addEmitter(emitterOptions);\n            }\n        }\n        else {\n            this.addEmitter(this.emitters);\n        }\n    }\n    pause() {\n        for (const emitter of this.array) {\n            emitter.pause();\n        }\n    }\n    play() {\n        for (const emitter of this.array) {\n            emitter.play();\n        }\n    }\n    removeEmitter(emitter) {\n        const index = this.array.indexOf(emitter);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const emitter of this.array) {\n            emitter.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    update(delta) {\n        for (const emitter of this.array) {\n            emitter.update(delta);\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}