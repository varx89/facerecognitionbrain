{"ast":null,"code":"import _regeneratorRuntime from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _slicedToArray from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _asyncToGenerator from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createForOfIteratorHelper from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { calcPositionFromSize, getRandom, getRangeMax, getRangeMin, setRangeValue } from \"../Utils/NumberUtils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nexport var Particles = /*#__PURE__*/function () {\n  function Particles(engine, container) {\n    _classCallCheck(this, Particles);\n\n    this.container = container;\n    this._engine = engine;\n    this.nextId = 0;\n    this.array = [];\n    this.zArray = [];\n    this.limit = 0;\n    this.needsSort = false;\n    this.lastZIndex = 0;\n    this.freqs = {\n      links: new Map(),\n      triangles: new Map()\n    };\n    this.interactionManager = new InteractionManager(this._engine, container);\n    var canvasSize = this.container.canvas.size;\n    this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2), 4);\n    this.movers = this._engine.plugins.getMovers(container, true);\n    this.updaters = this._engine.plugins.getUpdaters(container, true);\n  }\n\n  _createClass(Particles, [{\n    key: \"count\",\n    get: function get() {\n      return this.array.length;\n    }\n  }, {\n    key: \"addManualParticles\",\n    value: function addManualParticles() {\n      var container = this.container,\n          options = container.actualOptions;\n\n      var _iterator = _createForOfIteratorHelper(options.manualParticles),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var particle = _step.value;\n          this.addParticle(calcPositionFromSize({\n            size: container.canvas.size,\n            position: particle.position\n          }), particle.options);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"addParticle\",\n    value: function addParticle(position, overrideOptions, group, initializer) {\n      var container = this.container,\n          options = container.actualOptions,\n          limit = options.particles.number.limit;\n\n      if (limit > 0) {\n        var countToRemove = this.count + 1 - limit;\n\n        if (countToRemove > 0) {\n          this.removeQuantity(countToRemove);\n        }\n      }\n\n      return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.array = [];\n      this.zArray = [];\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.array = [];\n      this.zArray = [];\n      this.movers = [];\n      this.updaters = [];\n    }\n  }, {\n    key: \"draw\",\n    value: function () {\n      var _draw = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(delta) {\n        var container, canvasSize, _iterator2, _step2, _step2$value, plugin, _iterator3, _step3, p;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                container = this.container, canvasSize = this.container.canvas.size;\n                this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, canvasSize.width * 3 / 2, canvasSize.height * 3 / 2), 4);\n                container.canvas.clear();\n                _context.next = 5;\n                return this.update(delta);\n\n              case 5:\n                if (this.needsSort) {\n                  this.zArray.sort(function (a, b) {\n                    return b.position.z - a.position.z || a.id - b.id;\n                  });\n                  this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n                  this.needsSort = false;\n                }\n\n                _iterator2 = _createForOfIteratorHelper(container.plugins);\n\n                try {\n                  for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                    _step2$value = _slicedToArray(_step2.value, 2), plugin = _step2$value[1];\n                    container.canvas.drawPlugin(plugin, delta);\n                  }\n                } catch (err) {\n                  _iterator2.e(err);\n                } finally {\n                  _iterator2.f();\n                }\n\n                _iterator3 = _createForOfIteratorHelper(this.zArray);\n\n                try {\n                  for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n                    p = _step3.value;\n                    p.draw(delta);\n                  }\n                } catch (err) {\n                  _iterator3.e(err);\n                } finally {\n                  _iterator3.f();\n                }\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function draw(_x) {\n        return _draw.apply(this, arguments);\n      }\n\n      return draw;\n    }()\n  }, {\n    key: \"getLinkFrequency\",\n    value: function getLinkFrequency(p1, p2) {\n      var range = setRangeValue(p1.id, p2.id),\n          key = \"\".concat(getRangeMin(range), \"_\").concat(getRangeMax(range));\n      var res = this.freqs.links.get(key);\n\n      if (res === undefined) {\n        res = getRandom();\n        this.freqs.links.set(key, res);\n      }\n\n      return res;\n    }\n  }, {\n    key: \"getTriangleFrequency\",\n    value: function getTriangleFrequency(p1, p2, p3) {\n      var _ref = [p1.id, p2.id, p3.id],\n          id1 = _ref[0],\n          id2 = _ref[1],\n          id3 = _ref[2];\n\n      if (id1 > id2) {\n        var _ref2 = [id1, id2];\n        id2 = _ref2[0];\n        id1 = _ref2[1];\n      }\n\n      if (id2 > id3) {\n        var _ref3 = [id2, id3];\n        id3 = _ref3[0];\n        id2 = _ref3[1];\n      }\n\n      if (id1 > id3) {\n        var _ref4 = [id1, id3];\n        id3 = _ref4[0];\n        id1 = _ref4[1];\n      }\n\n      var key = \"\".concat(id1, \"_\").concat(id2, \"_\").concat(id3);\n      var res = this.freqs.triangles.get(key);\n\n      if (res === undefined) {\n        res = getRandom();\n        this.freqs.triangles.set(key, res);\n      }\n\n      return res;\n    }\n  }, {\n    key: \"handleClickMode\",\n    value: function handleClickMode(mode) {\n      this.interactionManager.handleClickMode(mode);\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _a;\n\n      var container = this.container,\n          options = container.actualOptions;\n      this.lastZIndex = 0;\n      this.needsSort = false;\n      this.freqs.links = new Map();\n      this.freqs.triangles = new Map();\n      var handled = false;\n      this.updaters = this._engine.plugins.getUpdaters(container, true);\n      this.interactionManager.init();\n\n      var _iterator4 = _createForOfIteratorHelper(container.plugins),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n              plugin = _step4$value[1];\n\n          if (plugin.particlesInitialization !== undefined) {\n            handled = plugin.particlesInitialization();\n          }\n\n          if (handled) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      this.interactionManager.init();\n\n      var _iterator5 = _createForOfIteratorHelper(container.pathGenerators),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var _step5$value = _slicedToArray(_step5.value, 2),\n              pathGenerator = _step5$value[1];\n\n          pathGenerator.init(container);\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      this.addManualParticles();\n\n      if (!handled) {\n        for (var group in options.particles.groups) {\n          var groupOptions = options.particles.groups[group];\n\n          for (var i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n            this.addParticle(undefined, groupOptions, group);\n          }\n        }\n\n        for (var _i = this.count; _i < options.particles.number.value; _i++) {\n          this.addParticle();\n        }\n      }\n    }\n  }, {\n    key: \"push\",\n    value: function push(nb, mouse, overrideOptions, group) {\n      this.pushing = true;\n\n      for (var i = 0; i < nb; i++) {\n        this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n      }\n\n      this.pushing = false;\n    }\n  }, {\n    key: \"redraw\",\n    value: function () {\n      var _redraw = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.clear();\n                this.init();\n                _context2.next = 4;\n                return this.draw({\n                  value: 0,\n                  factor: 0\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function redraw() {\n        return _redraw.apply(this, arguments);\n      }\n\n      return redraw;\n    }()\n  }, {\n    key: \"remove\",\n    value: function remove(particle, group, override) {\n      this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n  }, {\n    key: \"removeAt\",\n    value: function removeAt(index) {\n      var quantity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n      var group = arguments.length > 2 ? arguments[2] : undefined;\n      var override = arguments.length > 3 ? arguments[3] : undefined;\n\n      if (!(index >= 0 && index <= this.count)) {\n        return;\n      }\n\n      var deleted = 0;\n\n      for (var i = index; deleted < quantity && i < this.count; i++) {\n        var particle = this.array[i];\n\n        if (!particle || particle.group !== group) {\n          continue;\n        }\n\n        particle.destroy(override);\n        this.array.splice(i--, 1);\n        var zIdx = this.zArray.indexOf(particle);\n        this.zArray.splice(zIdx, 1);\n        deleted++;\n\n        this._engine.dispatchEvent(\"particleRemoved\", {\n          container: this.container,\n          data: {\n            particle: particle\n          }\n        });\n      }\n    }\n  }, {\n    key: \"removeQuantity\",\n    value: function removeQuantity(quantity, group) {\n      this.removeAt(0, quantity, group);\n    }\n  }, {\n    key: \"setDensity\",\n    value: function setDensity() {\n      var options = this.container.actualOptions;\n\n      for (var group in options.particles.groups) {\n        this._applyDensity(options.particles.groups[group], 0, group);\n      }\n\n      this._applyDensity(options.particles, options.manualParticles.length);\n    }\n  }, {\n    key: \"update\",\n    value: function () {\n      var _update = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(delta) {\n        var _a, _b, container, particlesToDelete, _iterator6, _step6, _step6$value, pathGenerator, _iterator7, _step7, _step7$value, plugin, _iterator8, _step8, _particle, resizeFactor, _iterator10, _step10, _step10$value, _plugin, _iterator11, _step11, mover, _i2, _particlesToDelete, particle, _iterator9, _step9, _particle2, _iterator12, _step12, updater;\n\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                container = this.container, particlesToDelete = [];\n                _iterator6 = _createForOfIteratorHelper(container.pathGenerators);\n\n                try {\n                  for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                    _step6$value = _slicedToArray(_step6.value, 2), pathGenerator = _step6$value[1];\n                    pathGenerator.update();\n                  }\n                } catch (err) {\n                  _iterator6.e(err);\n                } finally {\n                  _iterator6.f();\n                }\n\n                _iterator7 = _createForOfIteratorHelper(container.plugins);\n\n                try {\n                  for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n                    _step7$value = _slicedToArray(_step7.value, 2), plugin = _step7$value[1];\n                    (_a = plugin.update) === null || _a === void 0 ? void 0 : _a.call(plugin, delta);\n                  }\n                } catch (err) {\n                  _iterator7.e(err);\n                } finally {\n                  _iterator7.f();\n                }\n\n                _iterator8 = _createForOfIteratorHelper(this.array);\n                _context3.prev = 6;\n\n                _iterator8.s();\n\n              case 8:\n                if ((_step8 = _iterator8.n()).done) {\n                  _context3.next = 41;\n                  break;\n                }\n\n                _particle = _step8.value;\n                resizeFactor = container.canvas.resizeFactor;\n\n                if (resizeFactor && !_particle.ignoresResizeRatio) {\n                  _particle.position.x *= resizeFactor.width;\n                  _particle.position.y *= resizeFactor.height;\n                }\n\n                _particle.ignoresResizeRatio = false;\n                _context3.next = 15;\n                return this.interactionManager.reset(_particle);\n\n              case 15:\n                _iterator10 = _createForOfIteratorHelper(this.container.plugins);\n                _context3.prev = 16;\n\n                _iterator10.s();\n\n              case 18:\n                if ((_step10 = _iterator10.n()).done) {\n                  _context3.next = 25;\n                  break;\n                }\n\n                _step10$value = _slicedToArray(_step10.value, 2), _plugin = _step10$value[1];\n\n                if (!_particle.destroyed) {\n                  _context3.next = 22;\n                  break;\n                }\n\n                return _context3.abrupt(\"break\", 25);\n\n              case 22:\n                (_b = _plugin.particleUpdate) === null || _b === void 0 ? void 0 : _b.call(_plugin, _particle, delta);\n\n              case 23:\n                _context3.next = 18;\n                break;\n\n              case 25:\n                _context3.next = 30;\n                break;\n\n              case 27:\n                _context3.prev = 27;\n                _context3.t0 = _context3[\"catch\"](16);\n\n                _iterator10.e(_context3.t0);\n\n              case 30:\n                _context3.prev = 30;\n\n                _iterator10.f();\n\n                return _context3.finish(30);\n\n              case 33:\n                _iterator11 = _createForOfIteratorHelper(this.movers);\n\n                try {\n                  for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n                    mover = _step11.value;\n\n                    if (mover.isEnabled(_particle)) {\n                      mover.move(_particle, delta);\n                    }\n                  }\n                } catch (err) {\n                  _iterator11.e(err);\n                } finally {\n                  _iterator11.f();\n                }\n\n                if (!_particle.destroyed) {\n                  _context3.next = 38;\n                  break;\n                }\n\n                particlesToDelete.push(_particle);\n                return _context3.abrupt(\"continue\", 39);\n\n              case 38:\n                this.quadTree.insert(new Point(_particle.getPosition(), _particle));\n\n              case 39:\n                _context3.next = 8;\n                break;\n\n              case 41:\n                _context3.next = 46;\n                break;\n\n              case 43:\n                _context3.prev = 43;\n                _context3.t1 = _context3[\"catch\"](6);\n\n                _iterator8.e(_context3.t1);\n\n              case 46:\n                _context3.prev = 46;\n\n                _iterator8.f();\n\n                return _context3.finish(46);\n\n              case 49:\n                for (_i2 = 0, _particlesToDelete = particlesToDelete; _i2 < _particlesToDelete.length; _i2++) {\n                  particle = _particlesToDelete[_i2];\n                  this.remove(particle);\n                }\n\n                _context3.next = 52;\n                return this.interactionManager.externalInteract(delta);\n\n              case 52:\n                _iterator9 = _createForOfIteratorHelper(container.particles.array);\n                _context3.prev = 53;\n\n                _iterator9.s();\n\n              case 55:\n                if ((_step9 = _iterator9.n()).done) {\n                  _context3.next = 64;\n                  break;\n                }\n\n                _particle2 = _step9.value;\n                _iterator12 = _createForOfIteratorHelper(this.updaters);\n\n                try {\n                  for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n                    updater = _step12.value;\n                    updater.update(_particle2, delta);\n                  }\n                } catch (err) {\n                  _iterator12.e(err);\n                } finally {\n                  _iterator12.f();\n                }\n\n                if (!(!_particle2.destroyed && !_particle2.spawning)) {\n                  _context3.next = 62;\n                  break;\n                }\n\n                _context3.next = 62;\n                return this.interactionManager.particlesInteract(_particle2, delta);\n\n              case 62:\n                _context3.next = 55;\n                break;\n\n              case 64:\n                _context3.next = 69;\n                break;\n\n              case 66:\n                _context3.prev = 66;\n                _context3.t2 = _context3[\"catch\"](53);\n\n                _iterator9.e(_context3.t2);\n\n              case 69:\n                _context3.prev = 69;\n\n                _iterator9.f();\n\n                return _context3.finish(69);\n\n              case 72:\n                delete container.canvas.resizeFactor;\n\n              case 73:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[6, 43, 46, 49], [16, 27, 30, 33], [53, 66, 69, 72]]);\n      }));\n\n      function update(_x2) {\n        return _update.apply(this, arguments);\n      }\n\n      return update;\n    }()\n  }, {\n    key: \"_applyDensity\",\n    value: function _applyDensity(options, manualCount, group) {\n      var _a;\n\n      if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n        return;\n      }\n\n      var numberOptions = options.number,\n          densityFactor = this._initDensityFactor(numberOptions.density),\n          optParticlesNumber = numberOptions.value,\n          optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber,\n          particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount,\n          particlesCount = Math.min(this.count, this.array.filter(function (t) {\n        return t.group === group;\n      }).length);\n\n      this.limit = numberOptions.limit * densityFactor;\n\n      if (particlesCount < particlesNumber) {\n        this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n      } else if (particlesCount > particlesNumber) {\n        this.removeQuantity(particlesCount - particlesNumber, group);\n      }\n    }\n  }, {\n    key: \"_initDensityFactor\",\n    value: function _initDensityFactor(densityOptions) {\n      var container = this.container;\n\n      if (!container.canvas.element || !densityOptions.enable) {\n        return 1;\n      }\n\n      var canvas = container.canvas.element,\n          pxRatio = container.retina.pixelRatio;\n      return canvas.width * canvas.height / (densityOptions.factor * Math.pow(pxRatio, 2) * densityOptions.area);\n    }\n  }, {\n    key: \"_pushParticle\",\n    value: function _pushParticle(position, overrideOptions, group, initializer) {\n      try {\n        var particle = new Particle(this._engine, this.nextId, this.container, position, overrideOptions, group);\n        var canAdd = true;\n\n        if (initializer) {\n          canAdd = initializer(particle);\n        }\n\n        if (!canAdd) {\n          return;\n        }\n\n        this.array.push(particle);\n        this.zArray.push(particle);\n        this.nextId++;\n\n        this._engine.dispatchEvent(\"particleAdded\", {\n          container: this.container,\n          data: {\n            particle: particle\n          }\n        });\n\n        return particle;\n      } catch (e) {\n        console.warn(\"error adding particle: \".concat(e));\n        return;\n      }\n    }\n  }]);\n\n  return Particles;\n}();","map":{"version":3,"names":["calcPositionFromSize","getRandom","getRangeMax","getRangeMin","setRangeValue","InteractionManager","Particle","Point","QuadTree","Rectangle","Particles","engine","container","_engine","nextId","array","zArray","limit","needsSort","lastZIndex","freqs","links","Map","triangles","interactionManager","canvasSize","canvas","size","quadTree","width","height","movers","plugins","getMovers","updaters","getUpdaters","length","options","actualOptions","manualParticles","particle","addParticle","position","overrideOptions","group","initializer","particles","number","countToRemove","count","removeQuantity","_pushParticle","delta","clear","update","sort","a","b","z","id","plugin","drawPlugin","p","draw","p1","p2","range","key","res","get","undefined","set","p3","id1","id2","id3","mode","handleClickMode","_a","handled","init","particlesInitialization","pathGenerators","pathGenerator","addManualParticles","groups","groupOptions","i","j","value","nb","mouse","pushing","factor","override","removeAt","indexOf","index","quantity","deleted","destroy","splice","zIdx","dispatchEvent","data","_applyDensity","particlesToDelete","call","resizeFactor","ignoresResizeRatio","x","y","reset","destroyed","_b","particleUpdate","mover","isEnabled","move","push","insert","getPosition","remove","externalInteract","updater","spawning","particlesInteract","manualCount","density","enable","numberOptions","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","Math","min","particlesCount","filter","t","abs","densityOptions","element","pxRatio","retina","pixelRatio","area","canAdd","e","console","warn"],"sources":["D:/Projects/facerecognitionbrain/node_modules/tsparticles-engine/esm/Core/Particles.js"],"sourcesContent":["import { calcPositionFromSize, getRandom, getRangeMax, getRangeMin, setRangeValue } from \"../Utils/NumberUtils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nexport class Particles {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.nextId = 0;\n        this.array = [];\n        this.zArray = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this.freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n        this.interactionManager = new InteractionManager(this._engine, container);\n        const canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this.array.length;\n    }\n    addManualParticles() {\n        const container = this.container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(calcPositionFromSize({\n                size: container.canvas.size,\n                position: particle.position,\n            }), particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this.container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this.array = [];\n        this.zArray = [];\n    }\n    destroy() {\n        this.array = [];\n        this.zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this.container, canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        container.canvas.clear();\n        await this.update(delta);\n        if (this.needsSort) {\n            this.zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this.zArray) {\n            p.draw(delta);\n        }\n    }\n    getLinkFrequency(p1, p2) {\n        const range = setRangeValue(p1.id, p2.id), key = `${getRangeMin(range)}_${getRangeMax(range)}`;\n        let res = this.freqs.links.get(key);\n        if (res === undefined) {\n            res = getRandom();\n            this.freqs.links.set(key, res);\n        }\n        return res;\n    }\n    getTriangleFrequency(p1, p2, p3) {\n        let [id1, id2, id3] = [p1.id, p2.id, p3.id];\n        if (id1 > id2) {\n            [id2, id1] = [id1, id2];\n        }\n        if (id2 > id3) {\n            [id3, id2] = [id2, id3];\n        }\n        if (id1 > id3) {\n            [id3, id1] = [id1, id3];\n        }\n        const key = `${id1}_${id2}_${id3}`;\n        let res = this.freqs.triangles.get(key);\n        if (res === undefined) {\n            res = getRandom();\n            this.freqs.triangles.set(key, res);\n        }\n        return res;\n    }\n    handleClickMode(mode) {\n        this.interactionManager.handleClickMode(mode);\n    }\n    init() {\n        var _a;\n        const container = this.container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        this.freqs.links = new Map();\n        this.freqs.triangles = new Map();\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this.interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this.interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (!(index >= 0 && index <= this.count)) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            const particle = this.array[i];\n            if (!particle || particle.group !== group) {\n                continue;\n            }\n            particle.destroy(override);\n            this.array.splice(i--, 1);\n            const zIdx = this.zArray.indexOf(particle);\n            this.zArray.splice(zIdx, 1);\n            deleted++;\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this.container,\n                data: {\n                    particle,\n                },\n            });\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this.container.actualOptions;\n        for (const group in options.particles.groups) {\n            this._applyDensity(options.particles.groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        var _a, _b;\n        const container = this.container, particlesToDelete = [];\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            (_a = plugin.update) === null || _a === void 0 ? void 0 : _a.call(plugin, delta);\n        }\n        for (const particle of this.array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this.interactionManager.reset(particle);\n            for (const [, plugin] of this.container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                (_b = plugin.particleUpdate) === null || _b === void 0 ? void 0 : _b.call(plugin, particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.push(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        for (const particle of particlesToDelete) {\n            this.remove(particle);\n        }\n        await this.interactionManager.externalInteract(delta);\n        for (const particle of container.particles.array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this.interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n    }\n    _applyDensity(options, manualCount, group) {\n        var _a;\n        if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n            return;\n        }\n        const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.array.filter((t) => t.group === group).length);\n        this.limit = numberOptions.limit * densityFactor;\n        if (particlesCount < particlesNumber) {\n            this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n        }\n        else if (particlesCount > particlesNumber) {\n            this.removeQuantity(particlesCount - particlesNumber, group);\n        }\n    }\n    _initDensityFactor(densityOptions) {\n        const container = this.container;\n        if (!container.canvas.element || !densityOptions.enable) {\n            return 1;\n        }\n        const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n        return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n    }\n    _pushParticle(position, overrideOptions, group, initializer) {\n        try {\n            const particle = new Particle(this._engine, this.nextId, this.container, position, overrideOptions, group);\n            let canAdd = true;\n            if (initializer) {\n                canAdd = initializer(particle);\n            }\n            if (!canAdd) {\n                return;\n            }\n            this.array.push(particle);\n            this.zArray.push(particle);\n            this.nextId++;\n            this._engine.dispatchEvent(\"particleAdded\", {\n                container: this.container,\n                data: {\n                    particle,\n                },\n            });\n            return particle;\n        }\n        catch (e) {\n            console.warn(`error adding particle: ${e}`);\n            return;\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}