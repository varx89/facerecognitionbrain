{"ast":null,"code":"import _classCallCheck from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nexport var Vector3d = /*#__PURE__*/function () {\n  function Vector3d(xOrCoords, y, z) {\n    _classCallCheck(this, Vector3d);\n\n    if (typeof xOrCoords !== \"number\" && xOrCoords) {\n      this.x = xOrCoords.x;\n      this.y = xOrCoords.y;\n      var coords3d = xOrCoords;\n      this.z = coords3d.z ? coords3d.z : 0;\n    } else if (xOrCoords !== undefined && y !== undefined) {\n      this.x = xOrCoords;\n      this.y = y;\n      this.z = z !== null && z !== void 0 ? z : 0;\n    } else {\n      throw new Error(\"tsParticles - Vector3d not initialized correctly\");\n    }\n  }\n\n  _createClass(Vector3d, [{\n    key: \"angle\",\n    get: function get() {\n      return Math.atan2(this.y, this.x);\n    },\n    set: function set(angle) {\n      this.updateFromAngle(angle, this.length);\n    }\n  }, {\n    key: \"length\",\n    get: function get() {\n      return Math.sqrt(this.getLengthSq());\n    },\n    set: function set(length) {\n      this.updateFromAngle(this.angle, length);\n    }\n  }, {\n    key: \"add\",\n    value: function add(v) {\n      return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n  }, {\n    key: \"addTo\",\n    value: function addTo(v) {\n      this.x += v.x;\n      this.y += v.y;\n      this.z += v.z;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy() {\n      return Vector3d.clone(this);\n    }\n  }, {\n    key: \"distanceTo\",\n    value: function distanceTo(v) {\n      return this.sub(v).length;\n    }\n  }, {\n    key: \"distanceToSq\",\n    value: function distanceToSq(v) {\n      return this.sub(v).getLengthSq();\n    }\n  }, {\n    key: \"div\",\n    value: function div(n) {\n      return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n  }, {\n    key: \"divTo\",\n    value: function divTo(n) {\n      this.x /= n;\n      this.y /= n;\n      this.z /= n;\n    }\n  }, {\n    key: \"getLengthSq\",\n    value: function getLengthSq() {\n      return Math.pow(this.x, 2) + Math.pow(this.y, 2);\n    }\n  }, {\n    key: \"mult\",\n    value: function mult(n) {\n      return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n  }, {\n    key: \"multTo\",\n    value: function multTo(n) {\n      this.x *= n;\n      this.y *= n;\n      this.z *= n;\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(angle) {\n      return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n  }, {\n    key: \"setTo\",\n    value: function setTo(c) {\n      this.x = c.x;\n      this.y = c.y;\n      var v3d = c;\n      this.z = v3d.z ? v3d.z : 0;\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(v) {\n      return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n  }, {\n    key: \"subFrom\",\n    value: function subFrom(v) {\n      this.x -= v.x;\n      this.y -= v.y;\n      this.z -= v.z;\n    }\n  }, {\n    key: \"updateFromAngle\",\n    value: function updateFromAngle(angle, length) {\n      this.x = Math.cos(angle) * length;\n      this.y = Math.sin(angle) * length;\n    }\n  }], [{\n    key: \"origin\",\n    get: function get() {\n      return Vector3d.create(0, 0, 0);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(source) {\n      return Vector3d.create(source.x, source.y, source.z);\n    }\n  }, {\n    key: \"create\",\n    value: function create(x, y, z) {\n      return new Vector3d(x, y, z);\n    }\n  }]);\n\n  return Vector3d;\n}();","map":{"version":3,"names":["Vector3d","xOrCoords","y","z","x","coords3d","undefined","Error","Math","atan2","angle","updateFromAngle","length","sqrt","getLengthSq","v","create","clone","sub","n","cos","sin","c","v3d","source"],"sources":["D:/Projects/facerecognitionbrain/node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js"],"sourcesContent":["export class Vector3d {\n    constructor(xOrCoords, y, z) {\n        if (typeof xOrCoords !== \"number\" && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z !== null && z !== void 0 ? z : 0;\n        }\n        else {\n            throw new Error(\"tsParticles - Vector3d not initialized correctly\");\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this.updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this.updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n    updateFromAngle(angle, length) {\n        this.x = Math.cos(angle) * length;\n        this.y = Math.sin(angle) * length;\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}