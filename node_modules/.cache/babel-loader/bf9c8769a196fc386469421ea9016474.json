{"ast":null,"code":"import _classCallCheck from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Vector, calcPositionOrRandomFromSize, calcPositionOrRandomFromSizeRanged, getDistance, getDistances, getRandom, getRangeValue, getStyleFromRgb, isPointInside, rangeColorToRgb } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nexport var AbsorberInstance = /*#__PURE__*/function () {\n  function AbsorberInstance(absorbers, container, options, position) {\n    _classCallCheck(this, AbsorberInstance);\n\n    var _a, _b, _c;\n\n    this.absorbers = absorbers;\n    this.container = container;\n    this.initialPosition = position ? Vector.create(position.x, position.y) : undefined;\n\n    if (options instanceof Absorber) {\n      this.options = options;\n    } else {\n      this.options = new Absorber();\n      this.options.load(options);\n    }\n\n    this.dragging = false;\n    this.name = this.options.name;\n    this.opacity = this.options.opacity;\n    this.size = getRangeValue(this.options.size.value) * container.retina.pixelRatio;\n    this.mass = this.size * this.options.size.density * container.retina.reduceFactor;\n    var limit = this.options.size.limit;\n    this.limit = {\n      radius: limit.radius * container.retina.pixelRatio * container.retina.reduceFactor,\n      mass: limit.mass\n    };\n    this.color = (_a = rangeColorToRgb(this.options.color)) !== null && _a !== void 0 ? _a : {\n      b: 0,\n      g: 0,\n      r: 0\n    };\n    this.position = (_c = (_b = this.initialPosition) === null || _b === void 0 ? void 0 : _b.copy()) !== null && _c !== void 0 ? _c : this.calcPosition();\n  }\n\n  _createClass(AbsorberInstance, [{\n    key: \"attract\",\n    value: function attract(particle) {\n      var container = this.container,\n          options = this.options;\n\n      if (options.draggable) {\n        var mouse = container.interactivity.mouse;\n\n        if (mouse.clicking && mouse.downPosition) {\n          var mouseDist = getDistance(this.position, mouse.downPosition);\n\n          if (mouseDist <= this.size) {\n            this.dragging = true;\n          }\n        } else {\n          this.dragging = false;\n        }\n\n        if (this.dragging && mouse.position) {\n          this.position.x = mouse.position.x;\n          this.position.y = mouse.position.y;\n        }\n      }\n\n      var pos = particle.getPosition(),\n          _getDistances = getDistances(this.position, pos),\n          dx = _getDistances.dx,\n          dy = _getDistances.dy,\n          distance = _getDistances.distance,\n          v = Vector.create(dx, dy);\n\n      v.length = this.mass / Math.pow(distance, 2) * container.retina.reduceFactor;\n\n      if (distance < this.size + particle.getRadius()) {\n        var sizeFactor = particle.getRadius() * 0.033 * container.retina.pixelRatio;\n\n        if (this.size > particle.getRadius() && distance < this.size - particle.getRadius() || particle.absorberOrbit !== undefined && particle.absorberOrbit.length < 0) {\n          if (options.destroy) {\n            particle.destroy();\n          } else {\n            particle.needsNewPosition = true;\n            this.updateParticlePosition(particle, v);\n          }\n        } else {\n          if (options.destroy) {\n            particle.size.value -= sizeFactor;\n          }\n\n          this.updateParticlePosition(particle, v);\n        }\n\n        if (this.limit.radius <= 0 || this.size < this.limit.radius) {\n          this.size += sizeFactor;\n        }\n\n        if (this.limit.mass <= 0 || this.mass < this.limit.mass) {\n          this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n        }\n      } else {\n        this.updateParticlePosition(particle, v);\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(context) {\n      context.translate(this.position.x, this.position.y);\n      context.beginPath();\n      context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n      context.closePath();\n      context.fillStyle = getStyleFromRgb(this.color, this.opacity);\n      context.fill();\n    }\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      var initialPosition = this.initialPosition;\n      this.position = initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin) ? initialPosition : this.calcPosition();\n    }\n  }, {\n    key: \"calcPosition\",\n    value: function calcPosition() {\n      var exactPosition = calcPositionOrRandomFromSizeRanged({\n        size: this.container.canvas.size,\n        position: this.options.position\n      });\n      return Vector.create(exactPosition.x, exactPosition.y);\n    }\n  }, {\n    key: \"updateParticlePosition\",\n    value: function updateParticlePosition(particle, v) {\n      var _a;\n\n      if (particle.destroyed) {\n        return;\n      }\n\n      var container = this.container,\n          canvasSize = container.canvas.size;\n\n      if (particle.needsNewPosition) {\n        var newPosition = calcPositionOrRandomFromSize({\n          size: canvasSize\n        });\n        particle.position.setTo(newPosition);\n        particle.velocity.setTo(particle.initialVelocity);\n        particle.absorberOrbit = undefined;\n        particle.needsNewPosition = false;\n      }\n\n      if (this.options.orbits) {\n        if (particle.absorberOrbit === undefined) {\n          particle.absorberOrbit = Vector.create(0, 0);\n          particle.absorberOrbit.length = getDistance(particle.getPosition(), this.position);\n          particle.absorberOrbit.angle = getRandom() * Math.PI * 2;\n        }\n\n        if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n          var minSize = Math.min(canvasSize.width, canvasSize.height);\n          particle.absorberOrbit.length = minSize * (1 + (getRandom() * 0.2 - 0.1));\n        }\n\n        if (particle.absorberOrbitDirection === undefined) {\n          particle.absorberOrbitDirection = particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\";\n        }\n\n        var orbitRadius = particle.absorberOrbit.length,\n            orbitAngle = particle.absorberOrbit.angle,\n            orbitDirection = particle.absorberOrbitDirection;\n        particle.velocity.setTo(Vector.origin);\n        var updateFunc = {\n          x: orbitDirection === \"clockwise\" ? Math.cos : Math.sin,\n          y: orbitDirection === \"clockwise\" ? Math.sin : Math.cos\n        };\n        particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n        particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n        particle.absorberOrbit.length -= v.length;\n        particle.absorberOrbit.angle += ((_a = particle.retina.moveSpeed) !== null && _a !== void 0 ? _a : 0) * container.retina.pixelRatio / 100 * container.retina.reduceFactor;\n      } else {\n        var addV = Vector.origin;\n        addV.length = v.length;\n        addV.angle = v.angle;\n        particle.velocity.addTo(addV);\n      }\n    }\n  }]);\n\n  return AbsorberInstance;\n}();","map":{"version":3,"names":["Vector","calcPositionOrRandomFromSize","calcPositionOrRandomFromSizeRanged","getDistance","getDistances","getRandom","getRangeValue","getStyleFromRgb","isPointInside","rangeColorToRgb","Absorber","AbsorberInstance","absorbers","container","options","position","_a","_b","_c","initialPosition","create","x","y","undefined","load","dragging","name","opacity","size","value","retina","pixelRatio","mass","density","reduceFactor","limit","radius","color","b","g","r","copy","calcPosition","particle","draggable","mouse","interactivity","clicking","downPosition","mouseDist","pos","getPosition","dx","dy","distance","v","length","Math","pow","getRadius","sizeFactor","absorberOrbit","destroy","needsNewPosition","updateParticlePosition","context","translate","beginPath","arc","PI","closePath","fillStyle","fill","canvas","origin","exactPosition","destroyed","canvasSize","newPosition","setTo","velocity","initialVelocity","orbits","angle","minSize","min","width","height","absorberOrbitDirection","orbitRadius","orbitAngle","orbitDirection","updateFunc","cos","sin","moveSpeed","addV","addTo"],"sources":["D:/Projects/facerecognitionbrain/node_modules/tsparticles-plugin-absorbers/esm/AbsorberInstance.js"],"sourcesContent":["import { Vector, calcPositionOrRandomFromSize, calcPositionOrRandomFromSizeRanged, getDistance, getDistances, getRandom, getRangeValue, getStyleFromRgb, isPointInside, rangeColorToRgb, } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nexport class AbsorberInstance {\n    constructor(absorbers, container, options, position) {\n        var _a, _b, _c;\n        this.absorbers = absorbers;\n        this.container = container;\n        this.initialPosition = position ? Vector.create(position.x, position.y) : undefined;\n        if (options instanceof Absorber) {\n            this.options = options;\n        }\n        else {\n            this.options = new Absorber();\n            this.options.load(options);\n        }\n        this.dragging = false;\n        this.name = this.options.name;\n        this.opacity = this.options.opacity;\n        this.size = getRangeValue(this.options.size.value) * container.retina.pixelRatio;\n        this.mass = this.size * this.options.size.density * container.retina.reduceFactor;\n        const limit = this.options.size.limit;\n        this.limit = {\n            radius: limit.radius * container.retina.pixelRatio * container.retina.reduceFactor,\n            mass: limit.mass,\n        };\n        this.color = (_a = rangeColorToRgb(this.options.color)) !== null && _a !== void 0 ? _a : {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = (_c = (_b = this.initialPosition) === null || _b === void 0 ? void 0 : _b.copy()) !== null && _c !== void 0 ? _c : this.calcPosition();\n    }\n    attract(particle) {\n        const container = this.container, options = this.options;\n        if (options.draggable) {\n            const mouse = container.interactivity.mouse;\n            if (mouse.clicking && mouse.downPosition) {\n                const mouseDist = getDistance(this.position, mouse.downPosition);\n                if (mouseDist <= this.size) {\n                    this.dragging = true;\n                }\n            }\n            else {\n                this.dragging = false;\n            }\n            if (this.dragging && mouse.position) {\n                this.position.x = mouse.position.x;\n                this.position.y = mouse.position.y;\n            }\n        }\n        const pos = particle.getPosition(), { dx, dy, distance } = getDistances(this.position, pos), v = Vector.create(dx, dy);\n        v.length = (this.mass / Math.pow(distance, 2)) * container.retina.reduceFactor;\n        if (distance < this.size + particle.getRadius()) {\n            const sizeFactor = particle.getRadius() * 0.033 * container.retina.pixelRatio;\n            if ((this.size > particle.getRadius() && distance < this.size - particle.getRadius()) ||\n                (particle.absorberOrbit !== undefined && particle.absorberOrbit.length < 0)) {\n                if (options.destroy) {\n                    particle.destroy();\n                }\n                else {\n                    particle.needsNewPosition = true;\n                    this.updateParticlePosition(particle, v);\n                }\n            }\n            else {\n                if (options.destroy) {\n                    particle.size.value -= sizeFactor;\n                }\n                this.updateParticlePosition(particle, v);\n            }\n            if (this.limit.radius <= 0 || this.size < this.limit.radius) {\n                this.size += sizeFactor;\n            }\n            if (this.limit.mass <= 0 || this.mass < this.limit.mass) {\n                this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n            }\n        }\n        else {\n            this.updateParticlePosition(particle, v);\n        }\n    }\n    draw(context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStyle = getStyleFromRgb(this.color, this.opacity);\n        context.fill();\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    calcPosition() {\n        const exactPosition = calcPositionOrRandomFromSizeRanged({\n            size: this.container.canvas.size,\n            position: this.options.position,\n        });\n        return Vector.create(exactPosition.x, exactPosition.y);\n    }\n    updateParticlePosition(particle, v) {\n        var _a;\n        if (particle.destroyed) {\n            return;\n        }\n        const container = this.container, canvasSize = container.canvas.size;\n        if (particle.needsNewPosition) {\n            const newPosition = calcPositionOrRandomFromSize({ size: canvasSize });\n            particle.position.setTo(newPosition);\n            particle.velocity.setTo(particle.initialVelocity);\n            particle.absorberOrbit = undefined;\n            particle.needsNewPosition = false;\n        }\n        if (this.options.orbits) {\n            if (particle.absorberOrbit === undefined) {\n                particle.absorberOrbit = Vector.create(0, 0);\n                particle.absorberOrbit.length = getDistance(particle.getPosition(), this.position);\n                particle.absorberOrbit.angle = getRandom() * Math.PI * 2;\n            }\n            if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n                const minSize = Math.min(canvasSize.width, canvasSize.height);\n                particle.absorberOrbit.length = minSize * (1 + (getRandom() * 0.2 - 0.1));\n            }\n            if (particle.absorberOrbitDirection === undefined) {\n                particle.absorberOrbitDirection =\n                    particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\";\n            }\n            const orbitRadius = particle.absorberOrbit.length, orbitAngle = particle.absorberOrbit.angle, orbitDirection = particle.absorberOrbitDirection;\n            particle.velocity.setTo(Vector.origin);\n            const updateFunc = {\n                x: orbitDirection === \"clockwise\" ? Math.cos : Math.sin,\n                y: orbitDirection === \"clockwise\" ? Math.sin : Math.cos,\n            };\n            particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n            particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n            particle.absorberOrbit.length -= v.length;\n            particle.absorberOrbit.angle +=\n                ((((_a = particle.retina.moveSpeed) !== null && _a !== void 0 ? _a : 0) * container.retina.pixelRatio) / 100) *\n                    container.retina.reduceFactor;\n        }\n        else {\n            const addV = Vector.origin;\n            addV.length = v.length;\n            addV.angle = v.angle;\n            particle.velocity.addTo(addV);\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}