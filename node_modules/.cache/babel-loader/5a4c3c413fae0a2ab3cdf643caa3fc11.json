{"ast":null,"code":"import _slicedToArray from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, setRangeValue } from \"../Utils/NumberUtils\";\nimport { deepExtend, isInArray, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Shape } from \"../Options/Classes/Particles/Shape/Shape\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\n\nvar fixOutMode = function fixOutMode(data) {\n  if (!(isInArray(data.outMode, data.checkModes) || isInArray(data.outMode, data.checkModes))) {\n    return;\n  }\n\n  if (data.coord > data.maxCoord - data.radius * 2) {\n    data.setCb(-data.radius);\n  } else if (data.coord < data.radius * 2) {\n    data.setCb(data.radius);\n  }\n};\n\nexport var Particle = /*#__PURE__*/function () {\n  function Particle(engine, id, container, position, overrideOptions, group) {\n    _classCallCheck(this, Particle);\n\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n\n    this.id = id;\n    this.container = container;\n    this.group = group;\n    this._engine = engine;\n    this.fill = true;\n    this.close = true;\n    this.lastPathTime = 0;\n    this.destroyed = false;\n    this.unbreakable = false;\n    this.rotation = 0;\n    this.misplaced = false;\n    this.retina = {\n      maxDistance: {}\n    };\n    this.outType = \"normal\";\n    this.ignoresResizeRatio = true;\n    var pxRatio = container.retina.pixelRatio,\n        mainOptions = container.actualOptions,\n        particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles),\n        shapeType = particlesOptions.shape.type,\n        reduceDuplicates = particlesOptions.reduceDuplicates;\n    this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n\n    if (overrideOptions === null || overrideOptions === void 0 ? void 0 : overrideOptions.shape) {\n      if (overrideOptions.shape.type) {\n        var overrideShapeType = overrideOptions.shape.type;\n        this.shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n      }\n\n      var shapeOptions = new Shape();\n      shapeOptions.load(overrideOptions.shape);\n\n      if (this.shape) {\n        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n      }\n    } else {\n      this.shapeData = this._loadShapeData(particlesOptions.shape, reduceDuplicates);\n    }\n\n    particlesOptions.load(overrideOptions);\n    particlesOptions.load((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles);\n    this.interactivity = new Interactivity(engine, container);\n    this.interactivity.load(container.actualOptions.interactivity);\n    this.interactivity.load(particlesOptions.interactivity);\n    this.fill = (_c = (_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.fill) !== null && _c !== void 0 ? _c : this.fill;\n    this.close = (_e = (_d = this.shapeData) === null || _d === void 0 ? void 0 : _d.close) !== null && _e !== void 0 ? _e : this.close;\n    this.options = particlesOptions;\n    var pathOptions = this.options.move.path;\n    this.pathDelay = getValue(pathOptions.delay) * 1000;\n\n    if (pathOptions.generator) {\n      this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n\n      if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n        this.pathGenerator.init(container);\n      }\n    }\n\n    var zIndexValue = getRangeValue(this.options.zIndex.value);\n    container.retina.initParticle(this);\n    var sizeOptions = this.options.size,\n        sizeRange = sizeOptions.value,\n        sizeAnimation = sizeOptions.animation;\n    this.size = {\n      enable: sizeOptions.animation.enable,\n      value: getRangeValue(sizeOptions.value) * container.retina.pixelRatio,\n      max: getRangeMax(sizeRange) * pxRatio,\n      min: getRangeMin(sizeRange) * pxRatio,\n      loops: 0,\n      maxLoops: getRangeValue(sizeOptions.animation.count)\n    };\n\n    if (sizeAnimation.enable) {\n      this.size.status = 0;\n      this.size.decay = 1 - getRangeValue(sizeAnimation.decay);\n\n      switch (sizeAnimation.startValue) {\n        case \"min\":\n          this.size.value = this.size.min;\n          this.size.status = 0;\n          break;\n\n        case \"random\":\n          this.size.value = randomInRange(this.size) * pxRatio;\n          this.size.status = getRandom() >= 0.5 ? 0 : 1;\n          break;\n\n        case \"max\":\n        default:\n          this.size.value = this.size.max;\n          this.size.status = 1;\n          break;\n      }\n\n      this.size.velocity = ((_f = this.retina.sizeAnimationSpeed) !== null && _f !== void 0 ? _f : container.retina.sizeAnimationSpeed) / 100 * container.retina.reduceFactor;\n\n      if (!sizeAnimation.sync) {\n        this.size.velocity *= getRandom();\n      }\n    }\n\n    this.bubble = {\n      inRange: false\n    };\n    this.slow = {\n      inRange: false,\n      factor: 1\n    };\n    this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n    this.initialPosition = this.position.copy();\n    var canvasSize = container.canvas.size,\n        moveCenter = this.options.move.center,\n        isCenterPercent = moveCenter.mode === \"percent\";\n    this.moveCenter = {\n      x: ((_g = moveCenter.x) !== null && _g !== void 0 ? _g : 50) * (isCenterPercent ? canvasSize.width / 100 : 1),\n      y: ((_h = moveCenter.y) !== null && _h !== void 0 ? _h : 50) * (isCenterPercent ? canvasSize.height / 100 : 1),\n      radius: (_j = this.options.move.center.radius) !== null && _j !== void 0 ? _j : 0,\n      mode: (_k = this.options.move.center.mode) !== null && _k !== void 0 ? _k : \"percent\"\n    };\n    this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n\n    switch (this.options.move.direction) {\n      case \"inside\":\n        this.outType = \"inside\";\n        break;\n\n      case \"outside\":\n        this.outType = \"outside\";\n        break;\n    }\n\n    this.initialVelocity = this._calculateVelocity();\n    this.velocity = this.initialVelocity.copy();\n    this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n    this.offset = Vector.origin;\n    var particles = container.particles;\n    particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n    particles.lastZIndex = this.position.z;\n    this.zIndexFactor = this.position.z / container.zLayers;\n    this.sides = 24;\n    var drawer = container.drawers.get(this.shape);\n\n    if (!drawer) {\n      drawer = this._engine.plugins.getShapeDrawer(this.shape);\n\n      if (drawer) {\n        container.drawers.set(this.shape, drawer);\n      }\n    }\n\n    if (drawer === null || drawer === void 0 ? void 0 : drawer.loadShape) {\n      drawer === null || drawer === void 0 ? void 0 : drawer.loadShape(this);\n    }\n\n    var sideCountFunc = drawer === null || drawer === void 0 ? void 0 : drawer.getSidesCount;\n\n    if (sideCountFunc) {\n      this.sides = sideCountFunc(this);\n    }\n\n    this.spawning = false;\n    this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n\n    var _iterator = _createForOfIteratorHelper(container.particles.updaters),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var updater = _step.value;\n        (_l = updater.init) === null || _l === void 0 ? void 0 : _l.call(updater, this);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    var _iterator2 = _createForOfIteratorHelper(container.particles.movers),\n        _step2;\n\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var mover = _step2.value;\n        (_m = mover.init) === null || _m === void 0 ? void 0 : _m.call(mover, this);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n\n    if (drawer === null || drawer === void 0 ? void 0 : drawer.particleInit) {\n      drawer.particleInit(container, this);\n    }\n\n    var _iterator3 = _createForOfIteratorHelper(container.plugins),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var _step3$value = _slicedToArray(_step3.value, 2),\n            plugin = _step3$value[1];\n\n        (_o = plugin.particleCreated) === null || _o === void 0 ? void 0 : _o.call(plugin, this);\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  }\n\n  _createClass(Particle, [{\n    key: \"destroy\",\n    value: function destroy(override) {\n      if (this.unbreakable || this.destroyed) {\n        return;\n      }\n\n      this.destroyed = true;\n      this.bubble.inRange = false;\n      this.slow.inRange = false;\n\n      var _iterator4 = _createForOfIteratorHelper(this.container.plugins),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n              plugin = _step4$value[1];\n\n          if (plugin.particleDestroyed) {\n            plugin.particleDestroyed(this, override);\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      var _iterator5 = _createForOfIteratorHelper(this.container.particles.updaters),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var updater = _step5.value;\n\n          if (updater.particleDestroyed) {\n            updater.particleDestroyed(this, override);\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(delta) {\n      var container = this.container;\n\n      var _iterator6 = _createForOfIteratorHelper(container.plugins),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var _step6$value = _slicedToArray(_step6.value, 2),\n              plugin = _step6$value[1];\n\n          container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n\n      container.canvas.drawParticle(this, delta);\n    }\n  }, {\n    key: \"getFillColor\",\n    value: function getFillColor() {\n      var _a, _b;\n\n      var color = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.color);\n\n      if (color && this.roll && (this.backColor || this.roll.alter)) {\n        var backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1,\n            backSum = this.roll.horizontal ? Math.PI / 2 : 0,\n            rolled = Math.floor((((_b = this.roll.angle) !== null && _b !== void 0 ? _b : 0) + backSum) / (Math.PI / backFactor)) % 2;\n\n        if (rolled) {\n          if (this.backColor) {\n            return this.backColor;\n          }\n\n          if (this.roll.alter) {\n            return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n          }\n        }\n      }\n\n      return color;\n    }\n  }, {\n    key: \"getMass\",\n    value: function getMass() {\n      return Math.pow(this.getRadius(), 2) * Math.PI / 2;\n    }\n  }, {\n    key: \"getPosition\",\n    value: function getPosition() {\n      return {\n        x: this.position.x + this.offset.x,\n        y: this.position.y + this.offset.y,\n        z: this.position.z\n      };\n    }\n  }, {\n    key: \"getRadius\",\n    value: function getRadius() {\n      var _a;\n\n      return (_a = this.bubble.radius) !== null && _a !== void 0 ? _a : this.size.value;\n    }\n  }, {\n    key: \"getStrokeColor\",\n    value: function getStrokeColor() {\n      var _a, _b;\n\n      return (_b = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.strokeColor)) !== null && _b !== void 0 ? _b : this.getFillColor();\n    }\n  }, {\n    key: \"isInsideCanvas\",\n    value: function isInsideCanvas() {\n      var radius = this.getRadius(),\n          canvasSize = this.container.canvas.size;\n      return this.position.x >= -radius && this.position.y >= -radius && this.position.y <= canvasSize.height + radius && this.position.x <= canvasSize.width + radius;\n    }\n  }, {\n    key: \"isVisible\",\n    value: function isVisible() {\n      return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      if (this.opacity) {\n        this.opacity.loops = 0;\n      }\n\n      this.size.loops = 0;\n    }\n  }, {\n    key: \"_calcPosition\",\n    value: function _calcPosition(container, position, zIndex) {\n      var tryCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n      var _a, _b, _c, _d;\n\n      var _iterator7 = _createForOfIteratorHelper(container.plugins),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var _step7$value = _slicedToArray(_step7.value, 2),\n              plugin = _step7$value[1];\n\n          var pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n\n          if (pluginPos !== undefined) {\n            return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n          }\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      var canvasSize = container.canvas.size,\n          exactPosition = calcExactPositionOrRandomFromSize({\n        size: canvasSize,\n        position: position\n      }),\n          pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex),\n          radius = this.getRadius(),\n          outModes = this.options.move.outModes,\n          fixHorizontal = function fixHorizontal(outMode) {\n        fixOutMode({\n          outMode: outMode,\n          checkModes: [\"bounce\", \"bounce-horizontal\"],\n          coord: pos.x,\n          maxCoord: container.canvas.size.width,\n          setCb: function setCb(value) {\n            return pos.x += value;\n          },\n          radius: radius\n        });\n      },\n          fixVertical = function fixVertical(outMode) {\n        fixOutMode({\n          outMode: outMode,\n          checkModes: [\"bounce\", \"bounce-vertical\"],\n          coord: pos.y,\n          maxCoord: container.canvas.size.height,\n          setCb: function setCb(value) {\n            return pos.y += value;\n          },\n          radius: radius\n        });\n      };\n\n      fixHorizontal((_a = outModes.left) !== null && _a !== void 0 ? _a : outModes.default);\n      fixHorizontal((_b = outModes.right) !== null && _b !== void 0 ? _b : outModes.default);\n      fixVertical((_c = outModes.top) !== null && _c !== void 0 ? _c : outModes.default);\n      fixVertical((_d = outModes.bottom) !== null && _d !== void 0 ? _d : outModes.default);\n\n      if (this._checkOverlap(pos, tryCount)) {\n        return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n      }\n\n      return pos;\n    }\n  }, {\n    key: \"_calculateVelocity\",\n    value: function _calculateVelocity() {\n      var baseVelocity = getParticleBaseVelocity(this.direction);\n      var res = baseVelocity.copy();\n      var moveOptions = this.options.move;\n\n      if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n        return res;\n      }\n\n      var rad = Math.PI / 180 * getRangeValue(moveOptions.angle.value);\n      var radOffset = Math.PI / 180 * getRangeValue(moveOptions.angle.offset);\n      var range = {\n        left: radOffset - rad / 2,\n        right: radOffset + rad / 2\n      };\n\n      if (!moveOptions.straight) {\n        res.angle += randomInRange(setRangeValue(range.left, range.right));\n      }\n\n      if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n        res.length *= getRandom();\n      }\n\n      return res;\n    }\n  }, {\n    key: \"_checkOverlap\",\n    value: function _checkOverlap(pos) {\n      var tryCount = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var collisionsOptions = this.options.collisions,\n          radius = this.getRadius();\n\n      if (!collisionsOptions.enable) {\n        return false;\n      }\n\n      var overlapOptions = collisionsOptions.overlap;\n\n      if (overlapOptions.enable) {\n        return false;\n      }\n\n      var retries = overlapOptions.retries;\n\n      if (retries >= 0 && tryCount > retries) {\n        throw new Error(\"Particle is overlapping and can't be placed\");\n      }\n\n      var overlaps = false;\n\n      var _iterator8 = _createForOfIteratorHelper(this.container.particles.array),\n          _step8;\n\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var particle = _step8.value;\n\n          if (getDistance(pos, particle.position) < radius + particle.getRadius()) {\n            overlaps = true;\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n\n      return overlaps;\n    }\n  }, {\n    key: \"_loadShapeData\",\n    value: function _loadShapeData(shapeOptions, reduceDuplicates) {\n      var shapeData = shapeOptions.options[this.shape];\n\n      if (shapeData) {\n        return deepExtend({}, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n      }\n    }\n  }]);\n\n  return Particle;\n}();","map":{"version":3,"names":["calcExactPositionOrRandomFromSize","clamp","getDistance","getParticleBaseVelocity","getParticleDirectionAngle","getRandom","getRangeMax","getRangeMin","getRangeValue","getValue","randomInRange","setRangeValue","deepExtend","isInArray","itemFromSingleOrMultiple","getHslFromAnimation","rangeColorToRgb","Interactivity","Shape","Vector","Vector3d","alterHsl","loadParticlesOptions","fixOutMode","data","outMode","checkModes","coord","maxCoord","radius","setCb","Particle","engine","id","container","position","overrideOptions","group","_a","_b","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_engine","fill","close","lastPathTime","destroyed","unbreakable","rotation","misplaced","retina","maxDistance","outType","ignoresResizeRatio","pxRatio","pixelRatio","mainOptions","actualOptions","particlesOptions","particles","shapeType","shape","type","reduceDuplicates","overrideShapeType","shapeOptions","load","shapeData","_loadShapeData","interactivity","options","pathOptions","move","path","pathDelay","delay","generator","pathGenerator","plugins","getPathGenerator","addPath","init","zIndexValue","zIndex","value","initParticle","sizeOptions","size","sizeRange","sizeAnimation","animation","enable","max","min","loops","maxLoops","count","status","decay","startValue","velocity","sizeAnimationSpeed","reduceFactor","sync","bubble","inRange","slow","factor","_calcPosition","zLayers","initialPosition","copy","canvasSize","canvas","moveCenter","center","isCenterPercent","mode","x","width","y","height","direction","initialVelocity","_calculateVelocity","moveDecay","offset","origin","needsSort","lastZIndex","z","zIndexFactor","sides","drawer","drawers","get","getShapeDrawer","set","loadShape","sideCountFunc","getSidesCount","spawning","shadowColor","shadow","color","updaters","updater","call","movers","mover","particleInit","plugin","particleCreated","override","particleDestroyed","delta","drawParticlePlugin","drawParticle","roll","backColor","alter","backFactor","horizontal","vertical","backSum","Math","PI","rolled","floor","angle","getRadius","strokeColor","getFillColor","isInsideCanvas","opacity","tryCount","pluginPos","particlePosition","undefined","create","exactPosition","pos","outModes","fixHorizontal","fixVertical","left","default","right","top","bottom","_checkOverlap","baseVelocity","res","moveOptions","rad","radOffset","range","straight","random","speed","length","collisionsOptions","collisions","overlapOptions","overlap","retries","Error","overlaps","array","particle"],"sources":["D:/Projects/facerecognitionbrain/node_modules/tsparticles-engine/esm/Core/Particle.js"],"sourcesContent":["import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, isInArray, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Shape } from \"../Options/Classes/Particles/Shape/Shape\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) => {\n    if (!(isInArray(data.outMode, data.checkModes) || isInArray(data.outMode, data.checkModes))) {\n        return;\n    }\n    if (data.coord > data.maxCoord - data.radius * 2) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < data.radius * 2) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n        this.id = id;\n        this.container = container;\n        this.group = group;\n        this._engine = engine;\n        this.fill = true;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, reduceDuplicates = particlesOptions.reduceDuplicates;\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        if (overrideOptions === null || overrideOptions === void 0 ? void 0 : overrideOptions.shape) {\n            if (overrideOptions.shape.type) {\n                const overrideShapeType = overrideOptions.shape.type;\n                this.shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n            }\n            const shapeOptions = new Shape();\n            shapeOptions.load(overrideOptions.shape);\n            if (this.shape) {\n                this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n            }\n        }\n        else {\n            this.shapeData = this._loadShapeData(particlesOptions.shape, reduceDuplicates);\n        }\n        particlesOptions.load(overrideOptions);\n        particlesOptions.load((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles);\n        this.interactivity = new Interactivity(engine, container);\n        this.interactivity.load(container.actualOptions.interactivity);\n        this.interactivity.load(particlesOptions.interactivity);\n        this.fill = (_c = (_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.fill) !== null && _c !== void 0 ? _c : this.fill;\n        this.close = (_e = (_d = this.shapeData) === null || _d === void 0 ? void 0 : _d.close) !== null && _e !== void 0 ? _e : this.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        const zIndexValue = getRangeValue(this.options.zIndex.value);\n        container.retina.initParticle(this);\n        const sizeOptions = this.options.size, sizeRange = sizeOptions.value, sizeAnimation = sizeOptions.animation;\n        this.size = {\n            enable: sizeOptions.animation.enable,\n            value: getRangeValue(sizeOptions.value) * container.retina.pixelRatio,\n            max: getRangeMax(sizeRange) * pxRatio,\n            min: getRangeMin(sizeRange) * pxRatio,\n            loops: 0,\n            maxLoops: getRangeValue(sizeOptions.animation.count),\n        };\n        if (sizeAnimation.enable) {\n            this.size.status = 0;\n            this.size.decay = 1 - getRangeValue(sizeAnimation.decay);\n            switch (sizeAnimation.startValue) {\n                case \"min\":\n                    this.size.value = this.size.min;\n                    this.size.status = 0;\n                    break;\n                case \"random\":\n                    this.size.value = randomInRange(this.size) * pxRatio;\n                    this.size.status = getRandom() >= 0.5 ? 0 : 1;\n                    break;\n                case \"max\":\n                default:\n                    this.size.value = this.size.max;\n                    this.size.status = 1;\n                    break;\n            }\n            this.size.velocity =\n                (((_f = this.retina.sizeAnimationSpeed) !== null && _f !== void 0 ? _f : container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                this.size.velocity *= getRandom();\n            }\n        }\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n        this.initialPosition = this.position.copy();\n        const canvasSize = container.canvas.size, moveCenter = this.options.move.center, isCenterPercent = moveCenter.mode === \"percent\";\n        this.moveCenter = {\n            x: ((_g = moveCenter.x) !== null && _g !== void 0 ? _g : 50) * (isCenterPercent ? canvasSize.width / 100 : 1),\n            y: ((_h = moveCenter.y) !== null && _h !== void 0 ? _h : 50) * (isCenterPercent ? canvasSize.height / 100 : 1),\n            radius: (_j = this.options.move.center.radius) !== null && _j !== void 0 ? _j : 0,\n            mode: (_k = this.options.move.center.mode) !== null && _k !== void 0 ? _k : \"percent\",\n        };\n        this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n        switch (this.options.move.direction) {\n            case \"inside\":\n                this.outType = \"inside\";\n                break;\n            case \"outside\":\n                this.outType = \"outside\";\n                break;\n        }\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        this.offset = Vector.origin;\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer === null || drawer === void 0 ? void 0 : drawer.loadShape) {\n            drawer === null || drawer === void 0 ? void 0 : drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer === null || drawer === void 0 ? void 0 : drawer.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            (_l = updater.init) === null || _l === void 0 ? void 0 : _l.call(updater, this);\n        }\n        for (const mover of container.particles.movers) {\n            (_m = mover.init) === null || _m === void 0 ? void 0 : _m.call(mover, this);\n        }\n        if (drawer === null || drawer === void 0 ? void 0 : drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            (_o = plugin.particleCreated) === null || _o === void 0 ? void 0 : _o.call(plugin, this);\n        }\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        for (const updater of this.container.particles.updaters) {\n            if (updater.particleDestroyed) {\n                updater.particleDestroyed(this, override);\n            }\n        }\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        var _a, _b;\n        const color = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.color);\n        if (color && this.roll && (this.backColor || this.roll.alter)) {\n            const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor((((_b = this.roll.angle) !== null && _b !== void 0 ? _b : 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (rolled) {\n                if (this.backColor) {\n                    return this.backColor;\n                }\n                if (this.roll.alter) {\n                    return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n                }\n            }\n        }\n        return color;\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        var _a;\n        return (_a = this.bubble.radius) !== null && _a !== void 0 ? _a : this.size.value;\n    }\n    getStrokeColor() {\n        var _a, _b;\n        return (_b = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.strokeColor)) !== null && _b !== void 0 ? _b : this.getFillColor();\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size;\n        return (this.position.x >= -radius &&\n            this.position.y >= -radius &&\n            this.position.y <= canvasSize.height + radius &&\n            this.position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        if (this.opacity) {\n            this.opacity.loops = 0;\n        }\n        this.size.loops = 0;\n    }\n    _calcPosition(container, position, zIndex, tryCount = 0) {\n        var _a, _b, _c, _d;\n        for (const [, plugin] of container.plugins) {\n            const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n            if (pluginPos !== undefined) {\n                return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n            }\n        }\n        const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n            size: canvasSize,\n            position: position,\n        }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-horizontal\"],\n                coord: pos.x,\n                maxCoord: container.canvas.size.width,\n                setCb: (value) => (pos.x += value),\n                radius,\n            });\n        }, fixVertical = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-vertical\"],\n                coord: pos.y,\n                maxCoord: container.canvas.size.height,\n                setCb: (value) => (pos.y += value),\n                radius,\n            });\n        };\n        fixHorizontal((_a = outModes.left) !== null && _a !== void 0 ? _a : outModes.default);\n        fixHorizontal((_b = outModes.right) !== null && _b !== void 0 ? _b : outModes.default);\n        fixVertical((_c = outModes.top) !== null && _c !== void 0 ? _c : outModes.default);\n        fixVertical((_d = outModes.bottom) !== null && _d !== void 0 ? _d : outModes.default);\n        if (this._checkOverlap(pos, tryCount)) {\n            return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n        }\n        return pos;\n    }\n    _calculateVelocity() {\n        const baseVelocity = getParticleBaseVelocity(this.direction);\n        const res = baseVelocity.copy();\n        const moveOptions = this.options.move;\n        if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n            return res;\n        }\n        const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value);\n        const radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset);\n        const range = {\n            left: radOffset - rad / 2,\n            right: radOffset + rad / 2,\n        };\n        if (!moveOptions.straight) {\n            res.angle += randomInRange(setRangeValue(range.left, range.right));\n        }\n        if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n            res.length *= getRandom();\n        }\n        return res;\n    }\n    _checkOverlap(pos, tryCount = 0) {\n        const collisionsOptions = this.options.collisions, radius = this.getRadius();\n        if (!collisionsOptions.enable) {\n            return false;\n        }\n        const overlapOptions = collisionsOptions.overlap;\n        if (overlapOptions.enable) {\n            return false;\n        }\n        const retries = overlapOptions.retries;\n        if (retries >= 0 && tryCount > retries) {\n            throw new Error(\"Particle is overlapping and can't be placed\");\n        }\n        let overlaps = false;\n        for (const particle of this.container.particles.array) {\n            if (getDistance(pos, particle.position) < radius + particle.getRadius()) {\n                overlaps = true;\n                break;\n            }\n        }\n        return overlaps;\n    }\n    _loadShapeData(shapeOptions, reduceDuplicates) {\n        const shapeData = shapeOptions.options[this.shape];\n        if (shapeData) {\n            return deepExtend({}, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}