{"ast":null,"code":"import _regeneratorRuntime from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { ParticlesInteractorBase, getDistances } from \"tsparticles-engine\";\nexport var Attractor = /*#__PURE__*/function (_ParticlesInteractorB) {\n  _inherits(Attractor, _ParticlesInteractorB);\n\n  var _super = _createSuper(Attractor);\n\n  function Attractor(container) {\n    _classCallCheck(this, Attractor);\n\n    return _super.call(this, container);\n  }\n\n  _createClass(Attractor, [{\n    key: \"clear\",\n    value: function clear() {}\n  }, {\n    key: \"init\",\n    value: function init() {}\n  }, {\n    key: \"interact\",\n    value: function () {\n      var _interact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(p1) {\n        var _a, container, distance, pos1, query, _iterator, _step, p2, pos2, _getDistances, dx, dy, rotate, ax, ay, p1Factor, p2Factor;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                container = this.container, distance = (_a = p1.retina.attractDistance) !== null && _a !== void 0 ? _a : container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n                _iterator = _createForOfIteratorHelper(query);\n                _context.prev = 2;\n\n                _iterator.s();\n\n              case 4:\n                if ((_step = _iterator.n()).done) {\n                  _context.next = 15;\n                  break;\n                }\n\n                p2 = _step.value;\n\n                if (!(p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning)) {\n                  _context.next = 8;\n                  break;\n                }\n\n                return _context.abrupt(\"continue\", 13);\n\n              case 8:\n                pos2 = p2.getPosition(), _getDistances = getDistances(pos1, pos2), dx = _getDistances.dx, dy = _getDistances.dy, rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;\n                p1.velocity.x -= ax * p1Factor;\n                p1.velocity.y -= ay * p1Factor;\n                p2.velocity.x += ax * p2Factor;\n                p2.velocity.y += ay * p2Factor;\n\n              case 13:\n                _context.next = 4;\n                break;\n\n              case 15:\n                _context.next = 20;\n                break;\n\n              case 17:\n                _context.prev = 17;\n                _context.t0 = _context[\"catch\"](2);\n\n                _iterator.e(_context.t0);\n\n              case 20:\n                _context.prev = 20;\n\n                _iterator.f();\n\n                return _context.finish(20);\n\n              case 23:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 17, 20, 23]]);\n      }));\n\n      function interact(_x) {\n        return _interact.apply(this, arguments);\n      }\n\n      return interact;\n    }()\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      return particle.options.move.attract.enable;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {}\n  }]);\n\n  return Attractor;\n}(ParticlesInteractorBase);","map":{"version":3,"names":["ParticlesInteractorBase","getDistances","Attractor","container","p1","distance","_a","retina","attractDistance","pos1","getPosition","query","particles","quadTree","queryCircle","p2","options","move","attract","enable","destroyed","spawning","pos2","dx","dy","rotate","ax","x","ay","y","p1Factor","size","value","p2Factor","velocity","particle"],"sources":["D:/Projects/facerecognitionbrain/node_modules/tsparticles-interaction-particles-attract/esm/Attractor.js"],"sourcesContent":["import { ParticlesInteractorBase, getDistances } from \"tsparticles-engine\";\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1) {\n        var _a;\n        const container = this.container, distance = (_a = p1.retina.attractDistance) !== null && _a !== void 0 ? _a : container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n"],"mappings":";;;;;;;AAAA,SAASA,uBAAT,EAAkCC,YAAlC,QAAsD,oBAAtD;AACA,WAAaC,SAAb;EAAA;;EAAA;;EACI,mBAAYC,SAAZ,EAAuB;IAAA;;IAAA,yBACbA,SADa;EAEtB;;EAHL;IAAA;IAAA,OAII,iBAAQ,CACP;EALL;IAAA;IAAA,OAMI,gBAAO,CACN;EAPL;IAAA;IAAA;MAAA,2EAQI,iBAAeC,EAAf;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAEUD,SAFV,GAEsB,KAAKA,SAF3B,EAEsCE,QAFtC,GAEiD,CAACC,EAAE,GAAGF,EAAE,CAACG,MAAH,CAAUC,eAAhB,MAAqC,IAArC,IAA6CF,EAAE,KAAK,KAAK,CAAzD,GAA6DA,EAA7D,GAAkEH,SAAS,CAACI,MAAV,CAAiBC,eAFpI,EAEqJC,IAFrJ,GAE4JL,EAAE,CAACM,WAAH,EAF5J,EAE8KC,KAF9K,GAEsLR,SAAS,CAACS,SAAV,CAAoBC,QAApB,CAA6BC,WAA7B,CAAyCL,IAAzC,EAA+CJ,QAA/C,CAFtL;gBAAA,uCAGqBM,KAHrB;gBAAA;;gBAAA;;cAAA;gBAAA;kBAAA;kBAAA;gBAAA;;gBAGeI,EAHf;;gBAAA,MAIYX,EAAE,KAAKW,EAAP,IAAa,CAACA,EAAE,CAACC,OAAH,CAAWC,IAAX,CAAgBC,OAAhB,CAAwBC,MAAtC,IAAgDJ,EAAE,CAACK,SAAnD,IAAgEL,EAAE,CAACM,QAJ/E;kBAAA;kBAAA;gBAAA;;gBAAA;;cAAA;gBAOcC,IAPd,GAOqBP,EAAE,CAACL,WAAH,EAPrB,kBAOoDT,YAAY,CAACQ,IAAD,EAAOa,IAAP,CAPhE,EAOyCC,EAPzC,iBAOyCA,EAPzC,EAO6CC,EAP7C,iBAO6CA,EAP7C,EAO8EC,MAP9E,GAOuFrB,EAAE,CAACY,OAAH,CAAWC,IAAX,CAAgBC,OAAhB,CAAwBO,MAP/G,EAOuHC,EAPvH,GAO4HH,EAAE,IAAIE,MAAM,CAACE,CAAP,GAAW,IAAf,CAP9H,EAOoJC,EAPpJ,GAOyJJ,EAAE,IAAIC,MAAM,CAACI,CAAP,GAAW,IAAf,CAP3J,EAOiLC,QAPjL,GAO4Lf,EAAE,CAACgB,IAAH,CAAQC,KAAR,GAAgB5B,EAAE,CAAC2B,IAAH,CAAQC,KAPpN,EAO2NC,QAP3N,GAOsO,IAAIH,QAP1O;gBAQQ1B,EAAE,CAAC8B,QAAH,CAAYP,CAAZ,IAAiBD,EAAE,GAAGI,QAAtB;gBACA1B,EAAE,CAAC8B,QAAH,CAAYL,CAAZ,IAAiBD,EAAE,GAAGE,QAAtB;gBACAf,EAAE,CAACmB,QAAH,CAAYP,CAAZ,IAAiBD,EAAE,GAAGO,QAAtB;gBACAlB,EAAE,CAACmB,QAAH,CAAYL,CAAZ,IAAiBD,EAAE,GAAGK,QAAtB;;cAXR;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;;cAAA;gBAAA;gBAAA;;gBAAA;;cAAA;gBAAA;;gBAAA;;gBAAA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CARJ;;MAAA;QAAA;MAAA;;MAAA;IAAA;EAAA;IAAA;IAAA,OAsBI,mBAAUE,QAAV,EAAoB;MAChB,OAAOA,QAAQ,CAACnB,OAAT,CAAiBC,IAAjB,CAAsBC,OAAtB,CAA8BC,MAArC;IACH;EAxBL;IAAA;IAAA,OAyBI,iBAAQ,CACP;EA1BL;;EAAA;AAAA,EAA+BnB,uBAA/B"},"metadata":{},"sourceType":"module"}