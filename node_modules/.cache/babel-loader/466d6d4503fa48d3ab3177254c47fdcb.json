{"ast":null,"code":"import _regeneratorRuntime from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _createForOfIteratorHelper from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { TextDrawer, validTypes } from \"./TextDrawer\";\nexport function loadTextShape(_x) {\n  return _loadTextShape.apply(this, arguments);\n}\n\nfunction _loadTextShape() {\n  _loadTextShape = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(engine) {\n    var drawer, _iterator, _step, type;\n\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            drawer = new TextDrawer();\n            _iterator = _createForOfIteratorHelper(validTypes);\n            _context.prev = 2;\n\n            _iterator.s();\n\n          case 4:\n            if ((_step = _iterator.n()).done) {\n              _context.next = 10;\n              break;\n            }\n\n            type = _step.value;\n            _context.next = 8;\n            return engine.addShape(type, drawer);\n\n          case 8:\n            _context.next = 4;\n            break;\n\n          case 10:\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](2);\n\n            _iterator.e(_context.t0);\n\n          case 15:\n            _context.prev = 15;\n\n            _iterator.f();\n\n            return _context.finish(15);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 12, 15, 18]]);\n  }));\n  return _loadTextShape.apply(this, arguments);\n}","map":{"version":3,"names":["TextDrawer","validTypes","loadTextShape","engine","drawer","type","addShape"],"sources":["D:/Projects/facerecognitionbrain/node_modules/tsparticles-shape-text/esm/index.js"],"sourcesContent":["import { TextDrawer, validTypes } from \"./TextDrawer\";\nexport async function loadTextShape(engine) {\n    const drawer = new TextDrawer();\n    for (const type of validTypes) {\n        await engine.addShape(type, drawer);\n    }\n}\n"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,UAArB,QAAuC,cAAvC;AACA,gBAAsBC,aAAtB;EAAA;AAAA;;;8EAAO,iBAA6BC,MAA7B;IAAA;;IAAA;MAAA;QAAA;UAAA;YACGC,MADH,GACY,IAAIJ,UAAJ,EADZ;YAAA,uCAEgBC,UAFhB;YAAA;;YAAA;;UAAA;YAAA;cAAA;cAAA;YAAA;;YAEQI,IAFR;YAAA;YAAA,OAGOF,MAAM,CAACG,QAAP,CAAgBD,IAAhB,EAAsBD,MAAtB,CAHP;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;;UAAA;YAAA;YAAA;;YAAA;;UAAA;YAAA;;YAAA;;YAAA;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C"},"metadata":{},"sourceType":"module"}