{"ast":null,"code":"import _toConsumableArray from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Projects/facerecognitionbrain/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nexport var Plugins = /*#__PURE__*/function () {\n  function Plugins(engine) {\n    _classCallCheck(this, Plugins);\n\n    this._engine = engine;\n    this.plugins = [];\n    this.interactorsInitializers = new Map();\n    this.moversInitializers = new Map();\n    this.updatersInitializers = new Map();\n    this.interactors = new Map();\n    this.movers = new Map();\n    this.updaters = new Map();\n    this.presets = new Map();\n    this.drawers = new Map();\n    this.pathGenerators = new Map();\n  }\n\n  _createClass(Plugins, [{\n    key: \"addInteractor\",\n    value: function addInteractor(name, initInteractor) {\n      this.interactorsInitializers.set(name, initInteractor);\n    }\n  }, {\n    key: \"addParticleMover\",\n    value: function addParticleMover(name, initMover) {\n      this.moversInitializers.set(name, initMover);\n    }\n  }, {\n    key: \"addParticleUpdater\",\n    value: function addParticleUpdater(name, initUpdater) {\n      this.updatersInitializers.set(name, initUpdater);\n    }\n  }, {\n    key: \"addPathGenerator\",\n    value: function addPathGenerator(type, pathGenerator) {\n      if (!this.getPathGenerator(type)) {\n        this.pathGenerators.set(type, pathGenerator);\n      }\n    }\n  }, {\n    key: \"addPlugin\",\n    value: function addPlugin(plugin) {\n      if (!this.getPlugin(plugin.id)) {\n        this.plugins.push(plugin);\n      }\n    }\n  }, {\n    key: \"addPreset\",\n    value: function addPreset(presetKey, options) {\n      var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (override || !this.getPreset(presetKey)) {\n        this.presets.set(presetKey, options);\n      }\n    }\n  }, {\n    key: \"addShapeDrawer\",\n    value: function addShapeDrawer(type, drawer) {\n      if (!this.getShapeDrawer(type)) {\n        this.drawers.set(type, drawer);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy(container) {\n      this.updaters.delete(container);\n      this.movers.delete(container);\n      this.interactors.delete(container);\n    }\n  }, {\n    key: \"getAvailablePlugins\",\n    value: function getAvailablePlugins(container) {\n      var res = new Map();\n\n      var _iterator = _createForOfIteratorHelper(this.plugins),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var plugin = _step.value;\n\n          if (!plugin.needsPlugin(container.actualOptions)) {\n            continue;\n          }\n\n          res.set(plugin.id, plugin.getPlugin(container));\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      return res;\n    }\n  }, {\n    key: \"getInteractors\",\n    value: function getInteractors(container) {\n      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var res = this.interactors.get(container);\n\n      if (!res || force) {\n        res = _toConsumableArray(this.interactorsInitializers.values()).map(function (t) {\n          return t(container);\n        });\n        this.interactors.set(container, res);\n      }\n\n      return res;\n    }\n  }, {\n    key: \"getMovers\",\n    value: function getMovers(container) {\n      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var res = this.movers.get(container);\n\n      if (!res || force) {\n        res = _toConsumableArray(this.moversInitializers.values()).map(function (t) {\n          return t(container);\n        });\n        this.movers.set(container, res);\n      }\n\n      return res;\n    }\n  }, {\n    key: \"getPathGenerator\",\n    value: function getPathGenerator(type) {\n      return this.pathGenerators.get(type);\n    }\n  }, {\n    key: \"getPlugin\",\n    value: function getPlugin(plugin) {\n      return this.plugins.find(function (t) {\n        return t.id === plugin;\n      });\n    }\n  }, {\n    key: \"getPreset\",\n    value: function getPreset(preset) {\n      return this.presets.get(preset);\n    }\n  }, {\n    key: \"getShapeDrawer\",\n    value: function getShapeDrawer(type) {\n      return this.drawers.get(type);\n    }\n  }, {\n    key: \"getSupportedShapes\",\n    value: function getSupportedShapes() {\n      return this.drawers.keys();\n    }\n  }, {\n    key: \"getUpdaters\",\n    value: function getUpdaters(container) {\n      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var res = this.updaters.get(container);\n\n      if (!res || force) {\n        res = _toConsumableArray(this.updatersInitializers.values()).map(function (t) {\n          return t(container);\n        });\n        this.updaters.set(container, res);\n      }\n\n      return res;\n    }\n  }, {\n    key: \"loadOptions\",\n    value: function loadOptions(options, sourceOptions) {\n      var _iterator2 = _createForOfIteratorHelper(this.plugins),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var plugin = _step2.value;\n          plugin.loadOptions(options, sourceOptions);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"loadParticlesOptions\",\n    value: function loadParticlesOptions(container, options) {\n      var updaters = this.updaters.get(container);\n\n      if (!updaters) {\n        return;\n      }\n\n      for (var _len = arguments.length, sourceOptions = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        sourceOptions[_key - 2] = arguments[_key];\n      }\n\n      var _iterator3 = _createForOfIteratorHelper(updaters),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var updater = _step3.value;\n\n          if (updater.loadOptions) {\n            updater.loadOptions.apply(updater, [options].concat(sourceOptions));\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }]);\n\n  return Plugins;\n}();","map":{"version":3,"names":["Plugins","engine","_engine","plugins","interactorsInitializers","Map","moversInitializers","updatersInitializers","interactors","movers","updaters","presets","drawers","pathGenerators","name","initInteractor","set","initMover","initUpdater","type","pathGenerator","getPathGenerator","plugin","getPlugin","id","push","presetKey","options","override","getPreset","drawer","getShapeDrawer","container","delete","res","needsPlugin","actualOptions","force","get","values","map","t","find","preset","keys","sourceOptions","loadOptions","updater"],"sources":["D:/Projects/facerecognitionbrain/node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js"],"sourcesContent":["export class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this.interactorsInitializers = new Map();\n        this.moversInitializers = new Map();\n        this.updatersInitializers = new Map();\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this.interactorsInitializers.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this.moversInitializers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this.updatersInitializers.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        if (!this.getPathGenerator(type)) {\n            this.pathGenerators.set(type, pathGenerator);\n        }\n    }\n    addPlugin(plugin) {\n        if (!this.getPlugin(plugin.id)) {\n            this.plugins.push(plugin);\n        }\n    }\n    addPreset(presetKey, options, override = false) {\n        if (override || !this.getPreset(presetKey)) {\n            this.presets.set(presetKey, options);\n        }\n    }\n    addShapeDrawer(type, drawer) {\n        if (!this.getShapeDrawer(type)) {\n            this.drawers.set(type, drawer);\n        }\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            if (!plugin.needsPlugin(container.actualOptions)) {\n                continue;\n            }\n            res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        let res = this.interactors.get(container);\n        if (!res || force) {\n            res = [...this.interactorsInitializers.values()].map((t) => t(container));\n            this.interactors.set(container, res);\n        }\n        return res;\n    }\n    getMovers(container, force = false) {\n        let res = this.movers.get(container);\n        if (!res || force) {\n            res = [...this.moversInitializers.values()].map((t) => t(container));\n            this.movers.set(container, res);\n        }\n        return res;\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        let res = this.updaters.get(container);\n        if (!res || force) {\n            res = [...this.updatersInitializers.values()].map((t) => t(container));\n            this.updaters.set(container, res);\n        }\n        return res;\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            if (updater.loadOptions) {\n                updater.loadOptions(options, ...sourceOptions);\n            }\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}